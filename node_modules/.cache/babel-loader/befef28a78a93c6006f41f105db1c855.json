{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isNumber2 = require('lodash/isNumber');\n\nvar _isNumber3 = _interopRequireDefault(_isNumber2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _domHelpers = require('../../util/dom-helpers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-StickySection');\n\nvar node = _propTypes2.default.node,\n    number = _propTypes2.default.number,\n    object = _propTypes2.default.object,\n    string = _propTypes2.default.string;\nvar StickySection = (0, _componentTypes.createClass)({\n  displayName: 'StickySection',\n  statics: {},\n  propTypes: {\n    children: node,\n    className: string,\n    style: object,\n    lowerBound: number,\n    viewportWidth: number\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isAboveFold: false,\n      containerRect: {}\n    };\n  },\n  handleScroll: function handleScroll() {\n    var lowerBound = this.props.lowerBound;\n    var _state = this.state,\n        isAboveFold = _state.isAboveFold,\n        containerRect = _state.containerRect;\n    var nextContainerRect = this.getContainerRect();\n\n    if (window.pageYOffset >= nextContainerRect.top) {\n      if (!isAboveFold) {\n        this.setState({\n          isAboveFold: true\n        });\n      }\n    } else {\n      if (isAboveFold) {\n        this.setState({\n          isAboveFold: false\n        });\n      }\n    }\n\n    if ((0, _isNumber3.default)(lowerBound) && window.pageYOffset >= lowerBound) {\n      this.setState({\n        isAboveFold: false\n      });\n    }\n\n    if (containerRect.bottom !== nextContainerRect.bottom || containerRect.height !== nextContainerRect.height || containerRect.left !== nextContainerRect.left || containerRect.right !== nextContainerRect.right || containerRect.top !== nextContainerRect.top || containerRect.width !== nextContainerRect.width || containerRect.scrollWidth !== nextContainerRect.scrollWidth || containerRect.frameLeft !== nextContainerRect.frameLeft) {\n      this.setState({\n        containerRect: nextContainerRect\n      });\n    }\n  },\n  getContainerRect: function getContainerRect() {\n    var containerRect = (0, _domHelpers.getAbsoluteBoundingClientRect)(this.scrollContainer);\n    var stickyRect = this.stickySection.getBoundingClientRect();\n    var frameRect = this.stickyFrame.getBoundingClientRect();\n    return {\n      bottom: containerRect.top + stickyRect.height,\n      height: stickyRect.height,\n      left: containerRect.left,\n      right: containerRect.left + stickyRect.width,\n      top: containerRect.top,\n      scrollWidth: this.stickySection.scrollWidth,\n      width: containerRect.width,\n      frameLeft: frameRect.left\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    setTimeout(function () {\n      _this.setState({\n        containerRect: _this.getContainerRect()\n      });\n\n      _this.handleScroll();\n    }, 1);\n    window.addEventListener('scroll', this.handleScroll, true);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll, true);\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        style = _props.style,\n        viewportWidth = _props.viewportWidth,\n        passThroughs = _objectWithoutProperties(_props, ['children', 'className', 'style', 'viewportWidth']);\n\n    var _state2 = this.state,\n        isAboveFold = _state2.isAboveFold,\n        containerRect = _state2.containerRect;\n    return _react2.default.createElement('div', _extends({}, (0, _componentTypes.omitProps)(passThroughs, StickySection), {\n      className: cx('&', className),\n      style: _extends({}, isAboveFold ? {\n        height: containerRect.height\n      } : {}, style),\n      ref: function ref(scrollContainer) {\n        return _this2.scrollContainer = scrollContainer;\n      }\n    }), _react2.default.createElement('div', {\n      className: cx('&-sticky-frame'),\n      ref: function ref(stickyFrame) {\n        return _this2.stickyFrame = stickyFrame;\n      },\n      style: _extends({}, isAboveFold ? {\n        position: 'fixed',\n        top: 0,\n        width: (0, _isNumber3.default)(viewportWidth) ? viewportWidth : containerRect.width,\n        height: containerRect.height,\n        overflow: 'hidden'\n      } : {}, style)\n    }, _react2.default.createElement('div', {\n      className: cx('&-sticky-section'),\n      ref: function ref(stickySection) {\n        return _this2.stickySection = stickySection;\n      },\n      style: _extends({}, isAboveFold ? {\n        position: 'absolute',\n        top: 0,\n        left: containerRect.left - containerRect.frameLeft || 0,\n        width: containerRect.scrollWidth,\n        height: containerRect.height\n      } : {\n        position: 'relative'\n      }, style)\n    }, children)));\n  }\n});\nexports.default = StickySection;","map":null,"metadata":{},"sourceType":"script"}