{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup');\n\nvar _CSSTransitionGroup2 = _interopRequireDefault(_CSSTransitionGroup);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _CrossIcon = require('../Icon/CrossIcon/CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nvar _DangerIcon = require('../Icon/DangerIcon/DangerIcon');\n\nvar _DangerIcon2 = _interopRequireDefault(_DangerIcon);\n\nvar _InfoIcon = require('../Icon/InfoIcon/InfoIcon');\n\nvar _InfoIcon2 = _interopRequireDefault(_InfoIcon);\n\nvar _SuccessIcon = require('../Icon/SuccessIcon/SuccessIcon');\n\nvar _SuccessIcon2 = _interopRequireDefault(_SuccessIcon);\n\nvar _WarningIcon = require('../Icon/WarningIcon/WarningIcon');\n\nvar _WarningIcon2 = _interopRequireDefault(_WarningIcon);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-Banner');\n\nvar bool = _propTypes2.default.bool,\n    element = _propTypes2.default.element,\n    func = _propTypes2.default.func,\n    node = _propTypes2.default.node,\n    oneOf = _propTypes2.default.oneOf,\n    string = _propTypes2.default.string;\nvar defaultIcons = {\n  success: _react2.default.createElement(_SuccessIcon2.default, null),\n  danger: _react2.default.createElement(_DangerIcon2.default, null),\n  info: _react2.default.createElement(_InfoIcon2.default, null),\n  warning: _react2.default.createElement(_WarningIcon2.default, null),\n  primary: null,\n  default: null\n};\nvar Banner = (0, _componentTypes.createClass)({\n  displayName: 'Banner',\n  statics: {},\n  propTypes: {\n    hasIcon: bool,\n    icon: element,\n    isCloseable: bool,\n    hasRoundedCorners: bool,\n    className: string,\n    children: node,\n    kind: oneOf(['primary', 'success', 'warning', 'danger', 'info', 'default']),\n    isSmall: bool,\n    onClose: func,\n    isClosed: bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      hasIcon: false,\n      icon: null,\n      isCloseable: true,\n      hasRoundedCorners: true,\n      kind: 'default',\n      isSmall: false,\n      onClose: _noop3.default\n    };\n  },\n  handleClose: function handleClose(event) {\n    var onClose = this.props.onClose;\n    onClose({\n      event: event,\n      props: this.props\n    });\n  },\n  render: function render() {\n    var _props = this.props,\n        hasIcon = _props.hasIcon,\n        icon = _props.icon,\n        kind = _props.kind,\n        isSmall = _props.isSmall,\n        className = _props.className,\n        children = _props.children,\n        isCloseable = _props.isCloseable,\n        hasRoundedCorners = _props.hasRoundedCorners,\n        isClosed = _props.isClosed,\n        passThroughs = _objectWithoutProperties(_props, ['hasIcon', 'icon', 'kind', 'isSmall', 'className', 'children', 'isCloseable', 'hasRoundedCorners', 'isClosed']);\n\n    var displayedIcon = null;\n\n    if (icon) {\n      displayedIcon = icon;\n    } else if (hasIcon) {\n      displayedIcon = defaultIcons[kind];\n    }\n\n    return _react2.default.createElement(_CSSTransitionGroup2.default, {\n      transitionName: cx('&'),\n      transitionEnterTimeout: 300,\n      transitionLeaveTimeout: 300\n    }, !isClosed ? _react2.default.createElement('section', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Banner), {\n      className: cx('&', {\n        '&-has-icon': displayedIcon,\n        '&-has-close': isCloseable,\n        '&-has-no-roundedCorners': !hasRoundedCorners,\n        '&-primary': kind === 'primary',\n        '&-success': kind === 'success',\n        '&-warning': kind === 'warning',\n        '&-danger': kind === 'danger',\n        '&-info': kind === 'info',\n        '&-small': isSmall\n      }, className)\n    }), displayedIcon ? _react2.default.createElement('span', {\n      className: cx('&-icon')\n    }, displayedIcon) : null, _react2.default.createElement('span', {\n      className: cx('&-content')\n    }, children), isCloseable ? _react2.default.createElement(_CrossIcon2.default, {\n      isClickable: true,\n      size: isSmall ? 44 : 26,\n      viewBox: isSmall ? '-12 -6 28 28' : '-3 -6 20 20',\n      className: cx('&-close'),\n      onClick: this.handleClose\n    }) : null) : null);\n  }\n});\nexports.default = Banner;","map":null,"metadata":{},"sourceType":"script"}