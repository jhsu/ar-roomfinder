{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ButtonGroupDumb = undefined;\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _Button = require('../Button/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _ButtonGroup = require('./ButtonGroup.reducers');\n\nvar _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);\n\nvar _stateManagement = require('../../util/state-management');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-ButtonGroup');\n\nvar any = _propTypes2.default.any,\n    func = _propTypes2.default.func,\n    arrayOf = _propTypes2.default.arrayOf,\n    number = _propTypes2.default.number;\nvar ButtonGroup = (0, _componentTypes.createClass)({\n  displayName: 'ButtonGroup',\n  statics: {},\n  components: {\n    Button: (0, _componentTypes.createClass)({\n      displayName: 'ButtonGroup.Button',\n      statics: {}\n    })\n  },\n  reducers: _ButtonGroup2.default,\n  propTypes: {\n    onSelect: func,\n    className: any,\n    children: any,\n    selectedIndices: arrayOf(number)\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      onSelect: _noop3.default,\n      className: null,\n      children: null,\n      selectedIndices: []\n    };\n  },\n  handleSelect: function handleSelect(_ref) {\n    var event = _ref.event,\n        childProps = _ref.props;\n    var callbackId = childProps.callbackId;\n    var clickedButtonProps = (0, _get3.default)((0, _componentTypes.findTypes)(this.props, ButtonGroup.Button)[callbackId], 'props', {}); // If the consumer passed in an `onClick` to the child `ButtonGroup.Button`\n    // component, we should make sure to call that in addition to the\n    // `ButtonGroup`'s `onSelect`.\n\n    if ((0, _isFunction3.default)(clickedButtonProps.onClick)) {\n      clickedButtonProps.onClick({\n        event: event,\n        props: childProps\n      });\n    }\n\n    this.props.onSelect(callbackId, {\n      event: event,\n      props: childProps\n    });\n  },\n  render: function render() {\n    var _this = this;\n\n    var _props = this.props,\n        selectedIndices = _props.selectedIndices,\n        className = _props.className,\n        children = _props.children,\n        passThroughs = _objectWithoutProperties(_props, ['selectedIndices', 'className', 'children']);\n\n    var buttonChildProps = (0, _map3.default)((0, _componentTypes.findTypes)(this.props, ButtonGroup.Button), 'props');\n    return _react2.default.createElement('span', _extends({}, (0, _componentTypes.omitProps)(passThroughs, ButtonGroup), {\n      className: cx('&', className)\n    }), (0, _map3.default)(buttonChildProps, function (buttonChildProp, index) {\n      return (// The order of the spread operator below is important. If the\n        // consumer puts `isActive` directly on a `ButtonGroup.Button`, we\n        // want that to take precedence over the `selectedIndices` prop on\n        // the parent `ButtonGroup`. However, we want our `onClick` at the\n        // bottom because we manually handle passing the event to the\n        // `ButtonGroup.Button`'s `onClick` if it exists.\n        _react2.default.createElement(_Button2.default, _extends({\n          isActive: (0, _includes3.default)(selectedIndices, index)\n        }, buttonChildProp, {\n          key: index,\n          callbackId: index,\n          onClick: _this.handleSelect\n        }))\n      );\n    }), children);\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(ButtonGroup);\nexports.ButtonGroupDumb = ButtonGroup;","map":null,"metadata":{},"sourceType":"script"}