{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lpoehler/workspaces/ar-roomfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchOrientation),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGeolocation),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(cameraMove),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(_callee);\n\nimport { delay, eventChannel, END } from \"redux-saga\";\nimport { race, all, fork, call, put, select, take, takeEvery } from \"redux-saga/effects\";\nimport { actions } from \"./store\";\n\nfunction createOrientationWatcher() {\n  return eventChannel(function (emit) {\n    var handler = function handler(evt) {\n      emit(evt);\n    };\n\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener(\"deviceorientation\", handler, false);\n    } else {\n      emit({\n        error: 'no orientation info'\n      });\n      emit(END);\n    }\n\n    return function () {\n      window.removeEventListener(\"deviceorientation\", handler);\n    };\n  });\n}\n\nfunction watchOrientation() {\n  var channel, _ref, realOrientation, timeout, orientation, initialHeading;\n\n  return _regeneratorRuntime.wrap(function watchOrientation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(createOrientationWatcher);\n\n        case 2:\n          channel = _context.sent;\n\n        case 3:\n          if (!true) {\n            _context.next = 30;\n            break;\n          }\n\n          _context.next = 6;\n          return race({\n            realOrientation: take(channel),\n            timeout: delay(2500)\n          });\n\n        case 6:\n          _ref = _context.sent;\n          realOrientation = _ref.realOrientation;\n          timeout = _ref.timeout;\n          orientation = realOrientation || 180;\n          _context.next = 12;\n          return select(function (state) {\n            return state.initialHeading;\n          });\n\n        case 12:\n          initialHeading = _context.sent;\n\n          if (realOrientation) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.next = 16;\n          return put({\n            type: actions.START_HEADING,\n            heading: 180\n          });\n\n        case 16:\n          return _context.abrupt(\"break\", 30);\n\n        case 17:\n          if (!orientation.error) {\n            _context.next = 23;\n            break;\n          }\n\n          _context.next = 20;\n          return put({\n            type: 'ERROR',\n            error: orientation.error\n          });\n\n        case 20:\n          return _context.abrupt(\"continue\", 3);\n\n        case 23:\n          if (initialHeading) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.next = 26;\n          return put({\n            type: actions.START_HEADING,\n            heading: orientation.webkitCompassHeading\n          });\n\n        case 26:\n          _context.next = 28;\n          return put({\n            type: actions.ORIENTATION,\n            orientation: {\n              alpha: orientation.alpha,\n              gamma: orientation.gamma,\n              beta: orientation.beta,\n              webkitCompassHeading: orientation.webkitCompassHeading\n            }\n          });\n\n        case 28:\n          _context.next = 3;\n          break;\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\n\nfunction createGeolocation() {\n  return eventChannel(function (emit) {\n    var handler = function handler(position) {\n      emit(position.coords);\n    };\n\n    navigator.geolocation.getCurrentPosition(handler);\n    var watchID = navigator.geolocation.watchPosition(handler, function (err) {\n      emit({\n        error: err\n      }, {\n        enableHighAccuracy: true\n      });\n    });\n    return function () {\n      navigator.geolocation.clearWatch(watchID);\n    };\n  });\n}\n\nfunction watchGeolocation() {\n  var watcher, coords, initialLocation;\n  return _regeneratorRuntime.wrap(function watchGeolocation$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return delay(1000);\n\n        case 2:\n          _context2.next = 4;\n          return call(createGeolocation);\n\n        case 4:\n          watcher = _context2.sent;\n\n        case 5:\n          if (!true) {\n            _context2.next = 24;\n            break;\n          }\n\n          _context2.next = 8;\n          return take(watcher);\n\n        case 8:\n          coords = _context2.sent;\n          _context2.next = 11;\n          return select(function (state) {\n            return state.initialLocation;\n          });\n\n        case 11:\n          initialLocation = _context2.sent;\n\n          if (initialLocation) {\n            _context2.next = 15;\n            break;\n          }\n\n          _context2.next = 15;\n          return put({\n            type: actions.START_LOCATION,\n            location: {\n              latitude: coords.latitude,\n              longitude: coords.longitude\n            }\n          });\n\n        case 15:\n          if (!coords.error) {\n            _context2.next = 20;\n            break;\n          }\n\n          _context2.next = 18;\n          return put({\n            type: \"ERROR\",\n            message: coords.error.message\n          });\n\n        case 18:\n          _context2.next = 22;\n          break;\n\n        case 20:\n          _context2.next = 22;\n          return put({\n            type: actions.GEOLOCATION,\n            coords: {\n              latitude: coords.latitude,\n              longitude: coords.longitude\n            }\n          });\n\n        case 22:\n          _context2.next = 5;\n          break;\n\n        case 24:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nfunction cameraMove(action) {\n  var userPosition, _action$position, x, y, z, dx, dy, dz, distance;\n\n  return _regeneratorRuntime.wrap(function cameraMove$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return select(function (state) {\n            return state.userPosition;\n          });\n\n        case 2:\n          userPosition = _context3.sent;\n\n          if (userPosition) {\n            _context3.next = 13;\n            break;\n          }\n\n          _action$position = action.position, x = _action$position.x, y = _action$position.y, z = _action$position.z;\n          dx = 0 - x;\n          dy = 1.6 - y;\n          dz = 0 - z;\n          distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n          draft.distanceTraveled = distance;\n          draft.userPosition = action.position;\n          _context3.next = 13;\n          return put({\n            type: actions.PLACE_USER,\n            position: action.position,\n            distance: distance\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([takeEvery(actions.CAMERA_MOVE, cameraMove), call(watchOrientation), call(watchGeolocation)]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this);\n}","map":{"version":3,"sources":["/Users/lpoehler/workspaces/ar-roomfinder/src/sagas.js"],"names":["watchOrientation","watchGeolocation","cameraMove","delay","eventChannel","END","race","all","fork","call","put","select","take","takeEvery","actions","createOrientationWatcher","emit","handler","evt","window","DeviceOrientationEvent","addEventListener","error","removeEventListener","channel","realOrientation","timeout","orientation","state","initialHeading","type","START_HEADING","heading","webkitCompassHeading","ORIENTATION","alpha","gamma","beta","createGeolocation","position","coords","navigator","geolocation","getCurrentPosition","watchID","watchPosition","err","enableHighAccuracy","clearWatch","watcher","initialLocation","START_LOCATION","location","latitude","longitude","message","GEOLOCATION","action","userPosition","x","y","z","dx","dy","dz","distance","Math","sqrt","draft","distanceTraveled","PLACE_USER","CAMERA_MOVE"],"mappings":"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","sourcesContent":["import { delay, eventChannel, END } from \"redux-saga\";\nimport {\n  race,\n  all,\n  fork,\n  call,\n  put,\n  select,\n  take,\n  takeEvery\n} from \"redux-saga/effects\";\n\nimport { actions } from \"./store\";\n\nfunction createOrientationWatcher() {\n  return eventChannel(emit => {\n    const handler = evt => {\n      emit(evt);\n    };\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener(\"deviceorientation\", handler, false);\n    } else {\n      emit({ error: 'no orientation info'});\n      emit(END);\n    }\n\n    return () => {\n      window.removeEventListener(\"deviceorientation\", handler);\n    };\n  });\n}\n\nfunction* watchOrientation() {\n  const channel = yield call(createOrientationWatcher);\n  while (true) {\n    const { realOrientation, timeout } = yield race({ realOrientation: take(channel),  timeout: delay(2500) });\n    const orientation = realOrientation || 180;\n    const initialHeading = yield select(state => state.initialHeading);\n    if (!realOrientation) {\n      yield put({\n        type: actions.START_HEADING,\n        heading: 180,\n      });\n      break;\n    }\n    if (orientation.error) {\n      yield put({\n        type: 'ERROR',\n        error: orientation.error,\n      });\n      continue;\n    } else if (!initialHeading) {\n      yield put({\n        type: actions.START_HEADING,\n        heading: orientation.webkitCompassHeading\n      });\n    }\n    yield put({\n      type: actions.ORIENTATION,\n      orientation: {\n        alpha: orientation.alpha,\n        gamma: orientation.gamma,\n        beta: orientation.beta,\n        webkitCompassHeading: orientation.webkitCompassHeading\n      }\n    });\n  }\n}\n\nfunction createGeolocation() {\n  return eventChannel(emit => {\n    const handler = position => {\n      emit(position.coords);\n    };\n\n    navigator.geolocation.getCurrentPosition(handler);\n\n    var watchID = navigator.geolocation.watchPosition(handler, err => {\n      emit(\n        { error: err },\n        {\n          enableHighAccuracy: true\n        }\n      );\n    });\n\n    return () => {\n      navigator.geolocation.clearWatch(watchID);\n    };\n  });\n}\n\nfunction* watchGeolocation() {\n  yield delay(1000);\n  const watcher = yield call(createGeolocation);\n  while (true) {\n    const coords = yield take(watcher);\n    const initialLocation = yield select(state => state.initialLocation);\n\n    if (!initialLocation) {\n      yield put({\n        type: actions.START_LOCATION,\n        location: { latitude: coords.latitude, longitude: coords.longitude }\n      });\n    }\n    if (coords.error) {\n      yield put({ type: \"ERROR\", message: coords.error.message });\n    } else {\n      yield put({\n        type: actions.GEOLOCATION,\n        coords: { latitude: coords.latitude, longitude: coords.longitude }\n      });\n    }\n  }\n}\n\nfunction* cameraMove(action) {\n  // if this is the first move, than reorient the world\n  const userPosition = yield select(state => state.userPosition);\n  if (!userPosition) {\n    const  {x, y, z} = action.position;\n    const dx = 0 - x;\n    const dy = 1.6 - y;\n    const dz = 0 - z;\n    const distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n    draft.distanceTraveled = distance;\n    draft.userPosition = action.position;\n    yield put({ type: actions.PLACE_USER, position: action.position, distance });\n  }\n}\n\nexport default function*() {\n  yield all([\n    takeEvery(actions.CAMERA_MOVE, cameraMove),\n    call(watchOrientation),\n    call(watchGeolocation)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}