{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SingleSelectDumb = undefined;\n\nvar _omit2 = require('lodash/omit');\n\nvar _omit3 = _interopRequireDefault(_omit2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _assign2 = require('lodash/assign');\n\nvar _assign3 = _interopRequireDefault(_assign2);\n\nvar _isNumber2 = require('lodash/isNumber');\n\nvar _isNumber3 = _interopRequireDefault(_isNumber2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _first2 = require('lodash/first');\n\nvar _first3 = _interopRequireDefault(_first2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _stateManagement = require('../../util/state-management');\n\nvar _SingleSelect = require('./SingleSelect.reducers');\n\nvar reducers = _interopRequireWildcard(_SingleSelect);\n\nvar _DropMenu = require('../DropMenu/DropMenu');\n\nvar _CaretIcon = require('../Icon/CaretIcon/CaretIcon');\n\nvar _CaretIcon2 = _interopRequireDefault(_CaretIcon);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-SingleSelect');\n\nvar any = _propTypes2.default.any,\n    bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func,\n    node = _propTypes2.default.node,\n    number = _propTypes2.default.number,\n    object = _propTypes2.default.object,\n    shape = _propTypes2.default.shape,\n    string = _propTypes2.default.string,\n    oneOfType = _propTypes2.default.oneOfType;\nvar SingleSelect = (0, _componentTypes.createClass)({\n  displayName: 'SingleSelect',\n  statics: {},\n  reducers: reducers,\n  components: {\n    Placeholder: (0, _componentTypes.createClass)({\n      displayName: 'SingleSelect.Placeholder',\n      statics: {},\n      propName: 'Placeholder'\n    }),\n    Option: (0, _componentTypes.createClass)({\n      displayName: 'SingleSelect.Option',\n      statics: {},\n      propName: 'Option',\n      propTypes: _extends({\n        Selected: any\n      }, _DropMenu.DropMenuDumb.Option.propTypes),\n      components: {\n        Selected: (0, _componentTypes.createClass)({\n          displayName: 'SingleSelect.Option.Selected',\n          statics: {},\n          propName: 'Selected'\n        })\n      }\n    }),\n    OptionGroup: (0, _componentTypes.createClass)({\n      displayName: 'SingleSelect.OptionGroup',\n      statics: {},\n      propName: 'OptionGroup',\n      propTypes: _DropMenu.DropMenuDumb.OptionGroup.propTypes\n    })\n  },\n  propTypes: {\n    children: node,\n    className: string,\n    style: object,\n    isSelectionHighlighted: bool,\n    hasReset: bool,\n    isDisabled: bool,\n    selectedIndex: number,\n    maxMenuHeight: oneOfType([number, string]),\n    DropMenu: shape(_DropMenu.DropMenuDumb.propTypes),\n    onSelect: func,\n    Placeholder: any,\n    Option: any,\n    OptionGroup: any\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      hasReset: true,\n      isSelectionHighlighted: true,\n      isDisabled: false,\n      selectedIndex: null,\n      DropMenu: _DropMenu.DropMenuDumb.getDefaultProps()\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      optionGroups: [],\n      flattenedOptionsData: [],\n      ungroupedOptionData: [],\n      optionGroupDataLookup: {}\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    // preprocess the options data before rendering\n    this.setState(_DropMenu.DropMenuDumb.preprocessOptionData(this.props, SingleSelect));\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    // only preprocess options data when it changes (via new props) - better performance than doing this each render\n    this.setState(_DropMenu.DropMenuDumb.preprocessOptionData(nextProps, SingleSelect));\n  },\n  render: function render() {\n    var _props = this.props,\n        style = _props.style,\n        className = _props.className,\n        hasReset = _props.hasReset,\n        isDisabled = _props.isDisabled,\n        isSelectionHighlighted = _props.isSelectionHighlighted,\n        selectedIndex = _props.selectedIndex,\n        maxMenuHeight = _props.maxMenuHeight,\n        onSelect = _props.onSelect,\n        dropMenuProps = _props.DropMenu;\n    var direction = dropMenuProps.direction,\n        isExpanded = dropMenuProps.isExpanded,\n        flyOutStyle = dropMenuProps.flyOutStyle;\n    var _state = this.state,\n        optionGroups = _state.optionGroups,\n        optionGroupDataLookup = _state.optionGroupDataLookup,\n        ungroupedOptionData = _state.ungroupedOptionData,\n        flattenedOptionsData = _state.flattenedOptionsData;\n    var placeholderProps = (0, _first3.default)((0, _map3.default)((0, _componentTypes.findTypes)(this.props, SingleSelect.Placeholder), 'props'));\n    var placeholder = (0, _get3.default)(placeholderProps, 'children', 'Select');\n    var isItemSelected = (0, _isNumber3.default)(selectedIndex);\n    return _react2.default.createElement(_DropMenu.DropMenuDumb, _extends({}, dropMenuProps, {\n      isDisabled: isDisabled,\n      selectedIndices: isItemSelected ? [selectedIndex] : [],\n      className: cx('&', className),\n      onSelect: onSelect,\n      style: style,\n      flyOutStyle: (0, _assign3.default)({}, flyOutStyle, !(0, _isNil3.default)(maxMenuHeight) ? {\n        maxHeight: maxMenuHeight\n      } : null)\n    }), _react2.default.createElement(_DropMenu.DropMenuDumb.Control, null, _react2.default.createElement('div', {\n      tabIndex: 0,\n      className: cx('&-Control', {\n        '&-Control-is-highlighted': !isDisabled && isItemSelected && isSelectionHighlighted || isExpanded && isSelectionHighlighted,\n        '&-Control-is-selected': !isDisabled && isItemSelected && isSelectionHighlighted || isExpanded && isSelectionHighlighted,\n        '&-Control-is-expanded': isExpanded,\n        '&-Control-is-disabled': isDisabled\n      })\n    }, _react2.default.createElement('span', _extends({}, !isItemSelected ? placeholderProps : null, {\n      className: cx('&-Control-content', !isItemSelected ? (0, _get3.default)(placeholderProps, 'className') : null)\n    }), isItemSelected ? (0, _get3.default)((0, _componentTypes.getFirst)(flattenedOptionsData[selectedIndex].optionProps, SingleSelect.Option.Selected), 'props.children') || flattenedOptionsData[selectedIndex].optionProps.children : placeholder), _react2.default.createElement(_CaretIcon2.default, {\n      direction: isExpanded ? direction : 'down',\n      size: 8\n    }))), hasReset && isItemSelected ? _react2.default.createElement(_DropMenu.DropMenuDumb.NullOption, placeholderProps, placeholder) : null, // for each option group passed in, render a DropMenu.OptionGroup, any label will be included in it's children, render each option inside the group\n    (0, _map3.default)(optionGroups, function (optionGroupProps, optionGroupIndex) {\n      return _react2.default.createElement(_DropMenu.DropMenuDumb.OptionGroup, _extends({\n        key: 'SingleSelectOptionGroup' + optionGroupIndex\n      }, optionGroupProps), optionGroupProps.children, (0, _map3.default)((0, _get3.default)(optionGroupDataLookup, optionGroupIndex), function (_ref) {\n        var optionProps = _ref.optionProps,\n            optionIndex = _ref.optionIndex;\n        return _react2.default.createElement(_DropMenu.DropMenuDumb.Option, _extends({\n          key: 'SingleSelectOption' + optionIndex\n        }, (0, _omit3.default)(optionProps, 'Selected')));\n      }));\n    }).concat( // then render all the ungrouped options at the end\n    (0, _map3.default)(ungroupedOptionData, function (_ref2) {\n      var optionProps = _ref2.optionProps,\n          optionIndex = _ref2.optionIndex;\n      return _react2.default.createElement(_DropMenu.DropMenuDumb.Option, _extends({\n        key: 'SingleSelectOption' + optionIndex\n      }, (0, _omit3.default)(optionProps, 'Selected')));\n    })));\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(SingleSelect);\nexports.SingleSelectDumb = SingleSelect;","map":null,"metadata":{},"sourceType":"script"}