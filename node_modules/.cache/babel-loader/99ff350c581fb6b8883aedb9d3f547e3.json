{"ast":null,"code":"var positionFactor = 1 / 111000;\n\nvar geoToVirtualScale = function geoToVirtualScale(delta) {\n  return delta / positionFactor;\n};\n\nvar getVirtualTargetLocation = function getVirtualTargetLocation(currentGeoLocation, targetGeoLocation) {\n  return {\n    latitude: targetGeoLocation.latitude - currentGeoLocation.latitude,\n    longitude: targetGeoLocation.longitude - currentGeoLocation.longitude\n  };\n};\n\nvar getVirtualScaleFromGeoLocation = function getVirtualScaleFromGeoLocation(userLocation) {\n  var x = geoToVirtualScale(userLocation.latitude);\n  var y = 0;\n  var z = geoToVirtualScale(userLocation.longitude);\n  return \"\".concat(x, \" \").concat(y, \" \").concat(z);\n};\n\nvar getVirtualScale = function getVirtualScale(userLocation, destinationLocation) {\n  var virtualRoomGeoLocation = getVirtualTargetLocation(userLocation, destinationLocation);\n  return getVirtualScaleFromGeoLocation(virtualRoomGeoLocation);\n};\n\nexport { getVirtualScale, getVirtualScaleFromGeoLocation };","map":{"version":3,"sources":["/Users/lpoehler/workspaces/ar-roomfinder/src/spatialConverter.js"],"names":["positionFactor","geoToVirtualScale","delta","getVirtualTargetLocation","currentGeoLocation","targetGeoLocation","latitude","longitude","getVirtualScaleFromGeoLocation","userLocation","x","y","z","getVirtualScale","destinationLocation","virtualRoomGeoLocation"],"mappings":"AAAA,IAAMA,cAAc,GAAG,IAAI,MAA3B;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,SAAIA,KAAK,GAAGF,cAAZ;AAAA,CAA/B;;AAEA,IAAMG,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,kBAAD,EAAqBC,iBAArB,EAA2C;AAC1E,SAAO;AACLC,IAAAA,QAAQ,EAAED,iBAAiB,CAACC,QAAlB,GAA6BF,kBAAkB,CAACE,QADrD;AAELC,IAAAA,SAAS,EAAEF,iBAAiB,CAACE,SAAlB,GAA8BH,kBAAkB,CAACG;AAFvD,GAAP;AAID,CALD;;AAOA,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAAC,YAAY,EAAI;AACrD,MAAMC,CAAC,GAAGT,iBAAiB,CAACQ,YAAY,CAACH,QAAd,CAA3B;AACA,MAAMK,CAAC,GAAG,CAAV;AACA,MAAMC,CAAC,GAAGX,iBAAiB,CAACQ,YAAY,CAACF,SAAd,CAA3B;AACA,mBAAUG,CAAV,cAAeC,CAAf,cAAoBC,CAApB;AACD,CALD;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,YAAD,EAAeK,mBAAf,EAAuC;AAC7D,MAAMC,sBAAsB,GAAGZ,wBAAwB,CACrDM,YADqD,EAErDK,mBAFqD,CAAvD;AAIA,SAAON,8BAA8B,CAACO,sBAAD,CAArC;AACD,CAND;;AAQA,SAASF,eAAT,EAA0BL,8BAA1B","sourcesContent":["const positionFactor = 1 / 111000;\nconst geoToVirtualScale = delta => delta / positionFactor;\n\nconst getVirtualTargetLocation = (currentGeoLocation, targetGeoLocation) => {\n  return {\n    latitude: targetGeoLocation.latitude - currentGeoLocation.latitude,\n    longitude: targetGeoLocation.longitude - currentGeoLocation.longitude\n  };\n};\n\nconst getVirtualScaleFromGeoLocation = userLocation => {\n  const x = geoToVirtualScale(userLocation.latitude);\n  const y = 0;\n  const z = geoToVirtualScale(userLocation.longitude);\n  return `${x} ${y} ${z}`;\n};\n\nconst getVirtualScale = (userLocation, destinationLocation) => {\n  const virtualRoomGeoLocation = getVirtualTargetLocation(\n    userLocation,\n    destinationLocation\n  );\n  return getVirtualScaleFromGeoLocation(virtualRoomGeoLocation);\n};\n\nexport { getVirtualScale, getVirtualScaleFromGeoLocation };\n"]},"metadata":{},"sourceType":"module"}