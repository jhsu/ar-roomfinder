{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExpanderPanelDumb = undefined;\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _stateManagement = require('../../util/state-management');\n\nvar _ChevronIcon = require('../Icon/ChevronIcon/ChevronIcon');\n\nvar _ChevronIcon2 = _interopRequireDefault(_ChevronIcon);\n\nvar _Collapsible = require('../Collapsible/Collapsible');\n\nvar _Collapsible2 = _interopRequireDefault(_Collapsible);\n\nvar _Panel = require('../Panel/Panel');\n\nvar _Panel2 = _interopRequireDefault(_Panel);\n\nvar _Expander = require('../Expander/Expander.reducers');\n\nvar reducers = _interopRequireWildcard(_Expander);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-ExpanderPanel');\n\nvar any = _propTypes2.default.any,\n    bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func,\n    node = _propTypes2.default.node,\n    object = _propTypes2.default.object,\n    string = _propTypes2.default.string;\nvar ExpanderPanel = (0, _componentTypes.createClass)({\n  displayName: 'ExpanderPanel',\n  statics: {},\n  components: {\n    Header: (0, _componentTypes.createClass)({\n      statics: {},\n      displayName: 'ExpanderPanel.Header',\n      propName: 'Header',\n      propTypes: {\n        children: node\n      }\n    })\n  },\n  reducers: reducers,\n  propTypes: {\n    children: node,\n    className: string,\n    isExpanded: bool,\n    isDisabled: bool,\n    hasPadding: bool,\n    onToggle: func,\n    style: object,\n    Header: any\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isExpanded: false,\n      onToggle: _noop3.default,\n      hasPadding: true\n    };\n  },\n  handleToggle: function handleToggle(event) {\n    if (!this.props.isDisabled) {\n      this.props.onToggle(!this.props.isExpanded, {\n        event: event,\n        props: this.props\n      });\n    }\n  },\n  render: function render() {\n    var _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        isExpanded = _props.isExpanded,\n        isDisabled = _props.isDisabled,\n        hasPadding = _props.hasPadding,\n        style = _props.style,\n        passThroughs = _objectWithoutProperties(_props, ['children', 'className', 'isExpanded', 'isDisabled', 'hasPadding', 'style']);\n\n    var headerChildProps = (0, _get3.default)((0, _componentTypes.getFirst)(this.props, ExpanderPanel.Header), 'props');\n    return _react2.default.createElement(_Panel2.default, _extends({}, (0, _componentTypes.omitProps)(passThroughs, ExpanderPanel, [], false), {\n      className: cx('&', {\n        '&-is-collapsed': !isExpanded,\n        '&-is-disabled': isDisabled\n      }, className),\n      style: style\n    }), _react2.default.createElement(_Panel2.default.Header, {\n      className: cx('&-header'),\n      onClick: this.handleToggle\n    }, _react2.default.createElement('span', {\n      className: cx('&-icon')\n    }, _react2.default.createElement(_ChevronIcon2.default, {\n      direction: isExpanded ? 'up' : 'down'\n    })), _react2.default.createElement('span', headerChildProps)), _react2.default.createElement(_Collapsible2.default, {\n      isExpanded: isExpanded,\n      className: cx('&-content', {\n        '&-content-is-expanded': isExpanded\n      })\n    }, _react2.default.createElement('div', {\n      className: cx('&-content-inner', {\n        '&-content-inner-has-padding': hasPadding\n      })\n    }, children)));\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(ExpanderPanel);\nexports.ExpanderPanelDumb = ExpanderPanel;","map":null,"metadata":{},"sourceType":"script"}