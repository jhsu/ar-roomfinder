{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TabsDumb = undefined;\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _findLastIndex2 = require('lodash/findLastIndex');\n\nvar _findLastIndex3 = _interopRequireDefault(_findLastIndex2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _stateManagement = require('../../util/state-management');\n\nvar _Tabs = require('./Tabs.reducers');\n\nvar reducers = _interopRequireWildcard(_Tabs);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-Tabs');\n\nvar any = _propTypes2.default.any,\n    bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func,\n    node = _propTypes2.default.node,\n    number = _propTypes2.default.number,\n    string = _propTypes2.default.string;\nvar Tab = (0, _componentTypes.createClass)({\n  displayName: 'Tabs.Tab',\n  statics: {},\n  propName: 'Tab',\n  propTypes: {\n    className: string,\n    index: number,\n    isDisabled: bool,\n    isLastTab: bool,\n    isOpen: bool,\n    isProgressive: bool,\n    isSelected: bool,\n    onSelect: func,\n    Title: node,\n    isNavigation: bool\n  },\n  handleClick: function handleClick(event) {\n    var props = this.props,\n        _props = this.props,\n        index = _props.index,\n        onSelect = _props.onSelect,\n        passThroughs = _objectWithoutProperties(_props, ['index', 'onSelect']);\n\n    if (!props.isDisabled) {\n      onSelect(index, passThroughs, event);\n    }\n  },\n  render: function render() {\n    var _props2 = this.props,\n        isDisabled = _props2.isDisabled,\n        isLastTab = _props2.isLastTab,\n        isOpen = _props2.isOpen,\n        isProgressive = _props2.isProgressive,\n        isSelected = _props2.isSelected,\n        Title = _props2.Title,\n        isNavigation = _props2.isNavigation,\n        className = _props2.className,\n        passThroughs = _objectWithoutProperties(_props2, ['isDisabled', 'isLastTab', 'isOpen', 'isProgressive', 'isSelected', 'Title', 'isNavigation', 'className']);\n\n    return _react2.default.createElement('li', _extends({\n      className: cx('&-Tab', {\n        '&-Tab-is-active': isSelected,\n        '&-Tab-is-disabled': isDisabled,\n        '&-Tab-is-active-and-open': isOpen && isSelected,\n        '&-Tab-is-progressive': isProgressive && !isLastTab\n      }, className),\n      onClick: this.handleClick\n    }, (0, _componentTypes.omitProps)(passThroughs, Tab)), _react2.default.createElement('span', {\n      className: cx('&-Tab-content')\n    }, Title), isProgressive && !isLastTab && _react2.default.createElement('span', {\n      className: cx('&-Tab-arrow')\n    }, _react2.default.createElement('svg', {\n      className: cx('&-Tab-arrow-svg'),\n      viewBox: isNavigation ? '0 0 8 37' : '0 0 8 28',\n      preserveAspectRatio: 'none'\n    }, _react2.default.createElement('polygon', {\n      className: cx('&-Tab-arrow-background'),\n      fill: '#fff',\n      points: isNavigation ? '0,0 8,18.5 0,37' : '0,0 8,14 0,28'\n    }), _react2.default.createElement('polyline', {\n      className: cx('&-Tab-arrow-tab-line'),\n      fill: '#fff',\n      points: '0,0 1,1 0,1'\n    }), _react2.default.createElement('polyline', {\n      className: cx('&-Tab-arrow-line'),\n      fill: 'none',\n      stroke: '#fff',\n      strokeWidth: '1',\n      points: isNavigation ? '0,37 7.3,18.5 0,0' : '0,28 7.9,14 0,0'\n    }))));\n  }\n});\nvar Tabs = (0, _componentTypes.createClass)({\n  displayName: 'Tabs',\n  statics: {},\n  components: {\n    Tab: Tab,\n    Title: (0, _componentTypes.createClass)({\n      statics: {},\n      displayName: 'Tabs.Title',\n      propName: 'Title'\n    })\n  },\n  reducers: reducers,\n  propTypes: {\n    className: string,\n    selectedIndex: number,\n    onSelect: func,\n    isOpen: bool,\n    isProgressive: bool,\n    hasMultilineTitle: bool,\n    hasFullWidthTabs: bool,\n    isNavigation: bool,\n    Tab: any\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      selectedIndex: 0,\n      onSelect: _noop3.default,\n      isOpen: true,\n      isProgressive: false,\n      hasMultilineTitle: false,\n      hasFullWidthTabs: true,\n      isNavigation: false\n    };\n  },\n  handleClicked: function handleClicked(index, tabProps, event) {\n    var onSelect = this.props.onSelect;\n    onSelect(index, {\n      event: event,\n      props: tabProps\n    });\n  },\n  render: function render() {\n    var _this = this;\n\n    var _props3 = this.props,\n        className = _props3.className,\n        hasMultilineTitle = _props3.hasMultilineTitle,\n        isOpen = _props3.isOpen,\n        isProgressive = _props3.isProgressive,\n        selectedIndex = _props3.selectedIndex,\n        hasFullWidthTabs = _props3.hasFullWidthTabs,\n        isNavigation = _props3.isNavigation,\n        passThroughs = _objectWithoutProperties(_props3, ['className', 'hasMultilineTitle', 'isOpen', 'isProgressive', 'selectedIndex', 'hasFullWidthTabs', 'isNavigation']); // Grab props array from each Tab\n\n\n    var tabChildProps = (0, _map3.default)((0, _componentTypes.findTypes)(this.props, Tab), 'props');\n    var selectedIndexFromChildren = (0, _findLastIndex3.default)(tabChildProps, {\n      isSelected: true\n    });\n    var actualSelectedIndex = selectedIndexFromChildren !== -1 ? selectedIndexFromChildren : selectedIndex;\n    return _react2.default.createElement('div', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Tabs), {\n      className: cx('&', className)\n    }), _react2.default.createElement('ul', {\n      className: cx('&-bar', {\n        '&-bar-is-multiline': hasMultilineTitle,\n        '&-variable-width': !hasFullWidthTabs,\n        '&-navigation-tabs': isNavigation\n      })\n    }, (0, _map3.default)(tabChildProps, function (tabProps, index) {\n      return _react2.default.createElement(Tab, _extends({\n        key: index,\n        index: index,\n        isLastTab: index === tabChildProps.length - 1,\n        isOpen: isOpen,\n        isProgressive: isProgressive,\n        isNavigation: isNavigation,\n        isSelected: index === actualSelectedIndex,\n        onSelect: _this.handleClicked,\n        Title: (0, _get3.default)((0, _componentTypes.getFirst)(tabProps, Tabs.Title), 'props.children', '')\n      }, tabProps));\n    })), _react2.default.createElement('div', {\n      className: cx('&-content')\n    }, (0, _get3.default)(tabChildProps, [actualSelectedIndex, 'children'])));\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(Tabs);\nexports.TabsDumb = Tabs;","map":null,"metadata":{},"sourceType":"script"}