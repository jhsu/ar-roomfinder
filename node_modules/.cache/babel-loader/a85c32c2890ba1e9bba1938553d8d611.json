{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DateSelectDumb = undefined;\n\nvar _times2 = require('lodash/times');\n\nvar _times3 = _interopRequireDefault(_times2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _clamp2 = require('lodash/clamp');\n\nvar _clamp3 = _interopRequireDefault(_clamp2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _stateManagement = require('../../util/state-management');\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _DateSelect = require('./DateSelect.reducers');\n\nvar reducers = _interopRequireWildcard(_DateSelect);\n\nvar _InfiniteSlidePanel = require('../InfiniteSlidePanel/InfiniteSlidePanel');\n\nvar _InfiniteSlidePanel2 = _interopRequireDefault(_InfiniteSlidePanel);\n\nvar _CalendarMonth = require('../CalendarMonth/CalendarMonth');\n\nvar _CalendarMonth2 = _interopRequireDefault(_CalendarMonth);\n\nvar _ChevronThinIcon = require('../Icon/ChevronThinIcon/ChevronThinIcon');\n\nvar _ChevronThinIcon2 = _interopRequireDefault(_ChevronThinIcon);\n\nvar _reactDayPicker = require('react-day-picker');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-DateSelect');\n\nvar NAV_BUTTON_SIZE = 32;\n\nvar clampMonthsShown = function clampMonthsShown(monthsShown) {\n  return (0, _clamp3.default)(monthsShown, 1, 6);\n};\n\nvar any = _propTypes2.default.any,\n    bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func,\n    instanceOf = _propTypes2.default.instanceOf,\n    number = _propTypes2.default.number,\n    oneOf = _propTypes2.default.oneOf,\n    string = _propTypes2.default.string;\nvar DateSelect = (0, _componentTypes.createClass)({\n  displayName: 'DateSelect',\n  statics: {},\n  components: {\n    CalendarMonth: (0, _componentTypes.createClass)({\n      displayName: 'DateSelect.CalendarMonth',\n      statics: {},\n      propName: 'CalendarMonth'\n    })\n  },\n  propTypes: {\n    className: string,\n    monthsShown: number,\n    calendarsRendered: number,\n    offset: number,\n    from: instanceOf(Date),\n    to: instanceOf(Date),\n    selectMode: oneOf(['day', 'from', 'to']),\n    initialMonth: instanceOf(Date),\n    selectedDays: any,\n    disabledDays: any,\n    showDivider: bool,\n    onSwipe: func,\n    onPrev: func,\n    onNext: func,\n    onSelectDate: func,\n    isFontSizeRelative: bool,\n    showCursorHighlight: bool,\n    useSlidePanel: bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      monthsShown: 1,\n      calendarsRendered: 6,\n      offset: 0,\n      from: null,\n      to: null,\n      initialMonth: new Date(),\n      selectedDays: null,\n      disabledDays: null,\n      showDivider: false,\n      onSwipe: _noop3.default,\n      onPrev: _noop3.default,\n      onNext: _noop3.default,\n      onSelectDate: _noop3.default,\n      isFontSizeRelative: false,\n      showCursorHighlight: true,\n      useSlidePanel: true\n    };\n  },\n  reducers: reducers,\n  getInitialState: function getInitialState() {\n    return {\n      cursor: null\n    };\n  },\n  handleDayClick: function handleDayClick(day, _ref, event) {\n    var disabled = _ref.disabled;\n    var onSelectDate = this.props.onSelectDate;\n\n    if (!disabled) {\n      onSelectDate(day, {\n        event: event,\n        props: this.props\n      });\n    }\n  },\n  handleDayMouseEnter: function handleDayMouseEnter(day, _ref2) {\n    var disabled = _ref2.disabled;\n\n    if (disabled) {\n      this.setState({\n        cursor: null\n      });\n    } else {\n      this.setState({\n        cursor: day\n      });\n    }\n  },\n  handleDayMouseLeave: function handleDayMouseLeave() {\n    this.setState({\n      cursor: null\n    });\n  },\n  handlePrev: function handlePrev(event) {\n    this.props.onPrev({\n      event: event,\n      props: this.props\n    });\n  },\n  handleNext: function handleNext(event) {\n    this.props.onNext({\n      event: event,\n      props: this.props\n    });\n  },\n  componentWillMount: function componentWillMount() {\n    this.initialMonth = new Date(this.props.initialMonth);\n  },\n  componentDidMount: function componentDidMount() {\n    var _props = this.props,\n        isFontSizeRelative = _props.isFontSizeRelative,\n        monthsShownRaw = _props.monthsShown;\n    var monthsShown = clampMonthsShown(monthsShownRaw);\n\n    if (isFontSizeRelative) {\n      var rootElement = _reactDom2.default.findDOMNode(this.rootRef);\n\n      var _rootElement$getBound = rootElement.getBoundingClientRect(),\n          width = _rootElement$getBound.width,\n          height = _rootElement$getBound.height;\n\n      var navButtonsWidth = NAV_BUTTON_SIZE * 2;\n      var oneMonthShownWidth = (width - navButtonsWidth) / monthsShown + navButtonsWidth;\n      var size = Math.sqrt(oneMonthShownWidth * height);\n      var relativeFontSize = Math.round(size / 24);\n      var relativeMinWidth = (width - navButtonsWidth) / monthsShown * 10.1075 / relativeFontSize * monthsShown + navButtonsWidth;\n      rootElement.style.fontSize = relativeFontSize + 'px';\n      rootElement.style.minWidth = relativeMinWidth + 'px';\n    }\n  },\n  renderCalendarMonth: function renderCalendarMonth(_ref3) {\n    var key = _ref3.key,\n        offset = _ref3.offset,\n        calendarPosition = _ref3.calendarPosition,\n        initialMonth = _ref3.initialMonth,\n        cursor = _ref3.cursor,\n        isRangeSameDay = _ref3.isRangeSameDay,\n        from = _ref3.from,\n        to = _ref3.to,\n        selectedDays = _ref3.selectedDays,\n        disabledDays = _ref3.disabledDays,\n        selectMode = _ref3.selectMode,\n        onDayClick = _ref3.onDayClick,\n        showCursorHighlight = _ref3.showCursorHighlight,\n        onDayMouseEnter = _ref3.onDayMouseEnter,\n        onDayMouseLeave = _ref3.onDayMouseLeave,\n        calendarMonthProps = _ref3.calendarMonthProps;\n    return _react2.default.createElement(_CalendarMonth2.default, _extends({\n      key: key,\n      className: cx('&-CalendarMonth'),\n      monthOffset: offset + calendarPosition,\n      initialMonth: initialMonth,\n      cursor: cursor,\n      from: isRangeSameDay ? null : from,\n      to: isRangeSameDay ? null : to,\n      selectedDays: isRangeSameDay ? from : selectedDays,\n      disabledDays: disabledDays,\n      selectMode: selectMode,\n      onDayClick: onDayClick,\n      onDayMouseEnter: showCursorHighlight ? onDayMouseEnter : null,\n      onDayMouseLeave: showCursorHighlight ? onDayMouseLeave : null\n    }, calendarMonthProps));\n  },\n  render: function render() {\n    var _this = this;\n\n    var _props2 = this.props,\n        className = _props2.className,\n        monthsShownRaw = _props2.monthsShown,\n        calendarsRendered = _props2.calendarsRendered,\n        offset = _props2.offset,\n        from = _props2.from,\n        to = _props2.to,\n        selectMode = _props2.selectMode,\n        selectedDays = _props2.selectedDays,\n        disabledDays = _props2.disabledDays,\n        showDivider = _props2.showDivider,\n        onSwipe = _props2.onSwipe,\n        showCursorHighlight = _props2.showCursorHighlight,\n        useSlidePanel = _props2.useSlidePanel,\n        passThroughs = _objectWithoutProperties(_props2, ['className', 'monthsShown', 'calendarsRendered', 'offset', 'from', 'to', 'selectMode', 'selectedDays', 'disabledDays', 'showDivider', 'onSwipe', 'showCursorHighlight', 'useSlidePanel']);\n\n    var cursor = this.state.cursor;\n\n    var isRangeSameDay = _reactDayPicker.DateUtils.isSameDay(from, to);\n\n    var calendarMonth = (0, _componentTypes.getFirst)(this.props, DateSelect.CalendarMonth) || _react2.default.createElement(DateSelect.CalendarMonth, null);\n\n    var monthsShown = clampMonthsShown(monthsShownRaw);\n    /* istanbul ignore next */\n\n    return _react2.default.createElement('section', _extends({\n      ref: function ref(_ref4) {\n        _this.rootRef = _ref4;\n      },\n      className: cx('&', className, {\n        '&-show-divider': showDivider\n      }),\n      style: _extends({\n        minWidth: NAV_BUTTON_SIZE * 2 + 185 * monthsShown\n      }, passThroughs.style)\n    }, (0, _componentTypes.omitProps)(passThroughs, DateSelect)), _react2.default.createElement('div', null, _react2.default.createElement(_ChevronThinIcon2.default, {\n      className: cx('&-chevron'),\n      size: NAV_BUTTON_SIZE,\n      isClickable: true,\n      direction: 'left',\n      onClick: this.handlePrev\n    })), useSlidePanel ? _react2.default.createElement(_InfiniteSlidePanel2.default, {\n      className: cx('&-InfiniteSlidePanel', '&-slidePanel'),\n      totalSlides: calendarsRendered,\n      slidesToShow: monthsShown,\n      offset: offset,\n      onSwipe: onSwipe\n    }, _react2.default.createElement(_InfiniteSlidePanel2.default.Slide, {\n      className: cx('&-slide')\n    }, function (slideOffset) {\n      return _react2.default.createElement('div', {\n        className: cx('&-slide-content')\n      }, _this.renderCalendarMonth({\n        key: slideOffset,\n        offset: offset,\n        calendarPosition: slideOffset - offset,\n        initialMonth: _this.initialMonth,\n        cursor: cursor,\n        isRangeSameDay: isRangeSameDay,\n        from: from,\n        to: to,\n        selectedDays: selectedDays,\n        disabledDays: disabledDays,\n        selectMode: selectMode,\n        onDayClick: _this.handleDayClick,\n        showCursorHighlight: showCursorHighlight,\n        onDayMouseEnter: _this.handleDayMouseEnter,\n        onDayMouseLeave: _this.handleDayMouseLeave,\n        calendarMonthProps: calendarMonth.props\n      }));\n    })) : _react2.default.createElement('div', {\n      className: cx('&-slidePanel', '&-slidePanel-simple')\n    }, (0, _times3.default)(monthsShown, function (calendarIndex) {\n      return _react2.default.createElement('div', {\n        className: cx('&-slide', '&-slide-simple'),\n        key: calendarIndex\n      }, _react2.default.createElement('div', {\n        className: cx('&-slide-content')\n      }, _this.renderCalendarMonth({\n        offset: offset,\n        calendarPosition: calendarIndex,\n        initialMonth: _this.initialMonth,\n        cursor: cursor,\n        isRangeSameDay: isRangeSameDay,\n        from: from,\n        to: to,\n        selectedDays: selectedDays,\n        disabledDays: disabledDays,\n        selectMode: selectMode,\n        onDayClick: _this.handleDayClick,\n        showCursorHighlight: showCursorHighlight,\n        onDayMouseEnter: _this.handleDayMouseEnter,\n        onDayMouseLeave: _this.handleDayMouseLeave,\n        calendarMonthProps: calendarMonth.props\n      })));\n    })), _react2.default.createElement('div', null, _react2.default.createElement(_ChevronThinIcon2.default, {\n      className: cx('&-chevron'),\n      size: NAV_BUTTON_SIZE,\n      isClickable: true,\n      direction: 'right',\n      onClick: this.handleNext\n    })));\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(DateSelect);\nexports.DateSelectDumb = DateSelect;","map":null,"metadata":{},"sourceType":"script"}