{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccordionDumb = undefined;\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _stateManagement = require('../../util/state-management');\n\nvar _ExpanderPanel = require('../ExpanderPanel/ExpanderPanel');\n\nvar _Accordion = require('../Accordion/Accordion.reducers');\n\nvar reducers = _interopRequireWildcard(_Accordion);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-Accordion');\n\nvar any = _propTypes2.default.any,\n    func = _propTypes2.default.func,\n    object = _propTypes2.default.object,\n    number = _propTypes2.default.number,\n    string = _propTypes2.default.string;\nvar Accordion = (0, _componentTypes.createClass)({\n  statics: {},\n  displayName: 'Accordion',\n  components: {\n    Item: _ExpanderPanel.ExpanderPanelDumb,\n    Header: _ExpanderPanel.ExpanderPanelDumb.Header\n  },\n  reducers: reducers,\n  propTypes: {\n    className: string,\n    selectedIndex: number,\n    onSelect: func,\n    style: object,\n    Header: any\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      onSelect: _noop3.default\n    };\n  },\n  handleToggle: function handleToggle(isExpanded, index, event) {\n    var selectedIndex = isExpanded ? index : null;\n    this.props.onSelect(selectedIndex, {\n      event: event,\n      props: this.props\n    });\n  },\n  render: function render() {\n    var _this = this;\n\n    var _props = this.props,\n        style = _props.style,\n        className = _props.className,\n        selectedIndex = _props.selectedIndex,\n        passThroughs = _objectWithoutProperties(_props, ['style', 'className', 'selectedIndex']);\n\n    var itemChildProps = (0, _map3.default)((0, _componentTypes.findTypes)(this.props, Accordion.Item), 'props');\n    return _react2.default.createElement('div', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Accordion), {\n      className: cx('&', className),\n      style: style\n    }), (0, _map3.default)(itemChildProps, function (itemChildProp, index) {\n      return _react2.default.createElement(_ExpanderPanel.ExpanderPanelDumb, _extends({\n        key: index\n      }, itemChildProp, {\n        className: cx('&-Item', itemChildProp.className),\n        onToggle: function onToggle(isExpanded, _ref) {\n          var event = _ref.event;\n          return _this.handleToggle(isExpanded, index, event);\n        },\n        isExpanded: !itemChildProp.isDisabled && selectedIndex === index\n      }));\n    }));\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(Accordion);\nexports.AccordionDumb = Accordion;","map":null,"metadata":{},"sourceType":"script"}