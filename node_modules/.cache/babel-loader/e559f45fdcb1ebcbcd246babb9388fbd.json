{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reduce2 = require('lodash/reduce');\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _set2 = require('lodash/set');\n\nvar _set3 = _interopRequireDefault(_set2);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _isNull2 = require('lodash/isNull');\n\nvar _isNull3 = _interopRequireDefault(_isNull2);\n\nvar _forEach2 = require('lodash/forEach');\n\nvar _forEach3 = _interopRequireDefault(_forEach2);\n\nvar _first2 = require('lodash/first');\n\nvar _first3 = _interopRequireDefault(_first2);\n\nvar _findIndex2 = require('lodash/findIndex');\n\nvar _findIndex3 = _interopRequireDefault(_findIndex2);\n\nvar _isNumber2 = require('lodash/isNumber');\n\nvar _isNumber3 = _interopRequireDefault(_isNumber2);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _property2 = require('lodash/property');\n\nvar _property3 = _interopRequireDefault(_property2);\n\nvar _endsWith2 = require('lodash/endsWith');\n\nvar _endsWith3 = _interopRequireDefault(_endsWith2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _assign2 = require('lodash/assign');\n\nvar _assign3 = _interopRequireDefault(_assign2);\n\nvar _omit2 = require('lodash/omit');\n\nvar _omit3 = _interopRequireDefault(_omit2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _CaretIcon = require('../Icon/CaretIcon/CaretIcon');\n\nvar _CaretIcon2 = _interopRequireDefault(_CaretIcon);\n\nvar _DragCaptureZone = require('../DragCaptureZone/DragCaptureZone');\n\nvar _DragCaptureZone2 = _interopRequireDefault(_DragCaptureZone);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-Table');\n\nvar any = _propTypes2.default.any,\n    bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func,\n    node = _propTypes2.default.node,\n    number = _propTypes2.default.number,\n    object = _propTypes2.default.object,\n    string = _propTypes2.default.string,\n    oneOf = _propTypes2.default.oneOf;\nvar Thead = (0, _componentTypes.createClass)({\n  displayName: 'Table.Thead',\n  statics: {},\n  propTypes: {\n    className: any,\n    children: node\n  },\n  render: function render() {\n    var _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        passThroughs = _objectWithoutProperties(_props, ['children', 'className']);\n\n    return _react2.default.createElement('thead', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Thead), {\n      className: cx('&-Thead', className)\n    }), renderRowsWithIdentifiedEdges((0, _componentTypes.filterTypes)(children, Tr), Th));\n  }\n});\nvar Tbody = (0, _componentTypes.createClass)({\n  displayName: 'Table.Tbody',\n  statics: {},\n  propTypes: {\n    className: any,\n    children: node\n  },\n  render: function render() {\n    var _props2 = this.props,\n        children = _props2.children,\n        className = _props2.className,\n        passThroughs = _objectWithoutProperties(_props2, ['children', 'className']);\n\n    return _react2.default.createElement('tbody', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Tbody), {\n      className: cx('&-Tbody', className)\n    }), renderRowsWithIdentifiedEdges((0, _componentTypes.filterTypes)(children, Tr), Td));\n  }\n});\nvar Tr = (0, _componentTypes.createClass)({\n  displayName: 'Table.Tr',\n  statics: {},\n  propTypes: {\n    children: node,\n    className: any,\n    isDisabled: bool,\n    isSelected: bool,\n    isActive: bool,\n    isActionable: bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isDisabled: false,\n      isSelected: false,\n      isActive: false,\n      isActionable: false\n    };\n  },\n  render: function render() {\n    var _props3 = this.props,\n        className = _props3.className,\n        children = _props3.children,\n        isDisabled = _props3.isDisabled,\n        isSelected = _props3.isSelected,\n        isActionable = _props3.isActionable,\n        isActive = _props3.isActive,\n        passThroughs = _objectWithoutProperties(_props3, ['className', 'children', 'isDisabled', 'isSelected', 'isActionable', 'isActive']);\n\n    return _react2.default.createElement('tr', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Tr), {\n      className: cx('&-Tr', {\n        '&-is-disabled': isDisabled,\n        '&-is-selected': isSelected,\n        '&-is-actionable': isActionable,\n        '&-is-active': isActive\n      }, className)\n    }), children);\n  }\n});\nvar Th = (0, _componentTypes.createClass)({\n  displayName: 'Table.Th',\n  statics: {},\n  propTypes: {\n    align: string,\n    children: node,\n    className: any,\n    hasBorderRight: bool,\n    hasBorderLeft: bool,\n    isResizable: bool,\n    isSortable: bool,\n    isSorted: bool,\n    onResize: func,\n    sortDirection: string,\n    style: object,\n    width: number,\n    isFirstRow: bool,\n    isLastRow: bool,\n    isFirstCol: bool,\n    isLastCol: bool,\n    isFirstSingle: bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      align: 'left',\n      isResizable: false,\n      isSorted: false,\n      sortDirection: 'up'\n    };\n  },\n  getInitialState: function getInitialState() {\n    var width = this.props.width;\n    return {\n      // Represents the actively changing width as the cell is resized.\n      activeWidth: width || null,\n      // Indicates if a `width` prop was explicitly provided.\n      hasSetWidth: !!width,\n      // Indicates whether the cell is currently being resized.\n      isResizing: false,\n      // Indicates a mouse drag is in progress\n      isDragging: false,\n      // Represents the width when the cell is not actively being resized.\n      passiveWidth: width || null\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(_ref) {\n    var width = _ref.width;\n\n    if (!(0, _isNil3.default)(width) && width !== this.props.width) {\n      this.setState({\n        hasSetWidth: true,\n        passiveWidth: width\n      });\n    }\n  },\n  render: function render() {\n    var _props4 = this.props,\n        children = _props4.children,\n        className = _props4.className,\n        hasBorderRight = _props4.hasBorderRight,\n        hasBorderLeft = _props4.hasBorderLeft,\n        isFirstRow = _props4.isFirstRow,\n        isLastRow = _props4.isLastRow,\n        isFirstCol = _props4.isFirstCol,\n        isFirstSingle = _props4.isFirstSingle,\n        isLastCol = _props4.isLastCol,\n        align = _props4.align,\n        isResizable = _props4.isResizable,\n        isSortable = _props4.isSortable,\n        isSorted = _props4.isSorted,\n        sortDirection = _props4.sortDirection,\n        style = _props4.style,\n        passThroughs = _objectWithoutProperties(_props4, ['children', 'className', 'hasBorderRight', 'hasBorderLeft', 'isFirstRow', 'isLastRow', 'isFirstCol', 'isFirstSingle', 'isLastCol', 'align', 'isResizable', 'isSortable', 'isSorted', 'sortDirection', 'style']);\n\n    var _state = this.state,\n        activeWidth = _state.activeWidth,\n        hasSetWidth = _state.hasSetWidth,\n        isResizing = _state.isResizing,\n        passiveWidth = _state.passiveWidth;\n    return _react2.default.createElement('th', _extends({}, (0, _omit3.default)(passThroughs, Th), {\n      className: cx('&-Th', {\n        '&-is-first-row': isFirstRow,\n        '&-is-last-row': isLastRow,\n        '&-is-first-col': isFirstCol,\n        '&-is-first-single': isFirstSingle,\n        '&-is-last-col': isLastCol,\n        '&-align-left': align === 'left',\n        '&-align-center': align === 'center',\n        '&-align-right': align === 'right',\n        '&-is-resizable': isResizable,\n        '&-is-resizing': isResizing,\n        '&-is-sortable': isSortable === false ? isSortable : isSorted || isSortable,\n        '&-is-sorted': isSorted,\n        '&-has-border-right': hasBorderRight,\n        '&-has-border-left': hasBorderLeft\n      }, className),\n      ref: 'root',\n      onClickCapture: this.handleClickCapture,\n      onMouseEnter: this.handleMouseEnter,\n      onMouseUp: this.handleMouseUp,\n      style: hasSetWidth ? (0, _assign3.default)({}, style, {\n        width: isResizing ? activeWidth : passiveWidth\n      }) : style\n    }), _react2.default.createElement('div', {\n      className: cx('&-Th-inner')\n    }, _react2.default.createElement('div', {\n      className: cx('&-Th-inner-content')\n    }, children), isSorted ? _react2.default.createElement('div', {\n      className: cx('&-Th-inner-caret')\n    }, _react2.default.createElement(_CaretIcon2.default, {\n      className: cx('&-sort-icon'),\n      direction: sortDirection,\n      size: 6\n    })) : null, isResizable ? _react2.default.createElement(_DragCaptureZone2.default, {\n      className: cx('&-Th-inner-resize'),\n      onDrag: this.handleDragged,\n      onDragEnd: this.handleDragEnded,\n      onDragStart: this.handleDragStarted\n    }) : null));\n  },\n  getWidth: function getWidth() {\n    var styleWidth = (0, _get3.default)(this.refs.root, 'style.width');\n\n    if ((0, _endsWith3.default)(styleWidth, 'px')) {\n      return parseInt(styleWidth);\n    }\n\n    return this.refs.root.getBoundingClientRect().width;\n  },\n  handleClickCapture: function handleClickCapture(event) {\n    if (this.state.isDragging) {\n      event.stopPropagation();\n      this.setState({\n        isDragging: false\n      });\n    }\n  },\n  handleMouseEnter: function handleMouseEnter() {\n    this.setState({\n      isDragging: this.state.isResizing\n    });\n  },\n  handleMouseUp: function handleMouseUp() {\n    this.setState({\n      isDragging: this.state.isResizing\n    });\n  },\n  handleDragEnded: function handleDragEnded(coordinates, _ref2) {\n    var event = _ref2.event;\n    this.setState({\n      isResizing: false,\n      passiveWidth: this.state.activeWidth\n    });\n    window.document.body.style.cursor = '';\n\n    if (this.props.onResize) {\n      this.props.onResize(this.state.activeWidth, {\n        event: event,\n        props: this.props\n      });\n    }\n  },\n  handleDragStarted: function handleDragStarted(coordinates, _ref3) {\n    var event = _ref3.event;\n    var startingWidth = this.getWidth();\n    this.setState({\n      activeWidth: startingWidth,\n      hasSetWidth: true,\n      isResizing: true,\n      isDragging: true,\n      passiveWidth: startingWidth\n    });\n    window.document.body.style.cursor = 'ew-resize';\n\n    if (this.props.onResize) {\n      this.props.onResize(startingWidth, {\n        event: event,\n        props: this.props\n      });\n    }\n  },\n  handleDragged: function handleDragged(coordinates, _ref4) {\n    var event = _ref4.event;\n    var activeWidth = this.state.passiveWidth + coordinates.dX;\n    this.setState({\n      activeWidth: activeWidth\n    });\n\n    if (this.props.onResize) {\n      this.props.onResize(activeWidth, {\n        event: event,\n        props: this.props\n      });\n    }\n  }\n});\nvar Td = (0, _componentTypes.createClass)({\n  displayName: 'Table.Td',\n  statics: {},\n  propTypes: {\n    align: string,\n    className: any,\n    hasBorderRight: bool,\n    hasBorderLeft: bool,\n    isFirstRow: bool,\n    isLastRow: bool,\n    isFirstCol: bool,\n    isLastCol: bool,\n    isFirstSingle: bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      align: 'left',\n      hasBorderRight: false,\n      hasBorderLeft: false\n    };\n  },\n  render: function render() {\n    var _props5 = this.props,\n        className = _props5.className,\n        isFirstRow = _props5.isFirstRow,\n        isLastRow = _props5.isLastRow,\n        isFirstCol = _props5.isFirstCol,\n        isLastCol = _props5.isLastCol,\n        isFirstSingle = _props5.isFirstSingle,\n        align = _props5.align,\n        hasBorderRight = _props5.hasBorderRight,\n        hasBorderLeft = _props5.hasBorderLeft,\n        passThroughs = _objectWithoutProperties(_props5, ['className', 'isFirstRow', 'isLastRow', 'isFirstCol', 'isLastCol', 'isFirstSingle', 'align', 'hasBorderRight', 'hasBorderLeft']);\n\n    return _react2.default.createElement('td', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Td, ['sortDirection']), {\n      className: cx('&-Td', {\n        '&-is-first-row': isFirstRow,\n        '&-is-last-row': isLastRow,\n        '&-is-first-col': isFirstCol,\n        '&-is-last-col': isLastCol,\n        '&-is-first-single': isFirstSingle,\n        '&-align-left': align === 'left',\n        '&-align-center': align === 'center',\n        '&-align-right': align === 'right',\n        '&-has-border-right': hasBorderRight,\n        '&-has-border-left': hasBorderLeft\n      }, className)\n    }));\n  }\n});\nvar Table = (0, _componentTypes.createClass)({\n  displayName: 'Table',\n  statics: {},\n  components: {\n    Thead: Thead,\n    Tbody: Tbody,\n    Tr: Tr,\n    Th: Th,\n    Td: Td\n  },\n  propTypes: {\n    style: object,\n    className: string,\n    density: oneOf(['compressed', 'extended']),\n    hasLightHeader: bool,\n    hasBorder: bool,\n    hasWordWrap: bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      density: 'extended',\n      hasBorder: false,\n      hasWordWrap: true,\n      hasLightHeader: false\n    };\n  },\n  render: function render() {\n    var _props6 = this.props,\n        className = _props6.className,\n        hasBorder = _props6.hasBorder,\n        density = _props6.density,\n        hasWordWrap = _props6.hasWordWrap,\n        hasLightHeader = _props6.hasLightHeader,\n        style = _props6.style,\n        passThroughs = _objectWithoutProperties(_props6, ['className', 'hasBorder', 'density', 'hasWordWrap', 'hasLightHeader', 'style']);\n\n    return _react2.default.createElement('table', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Table), {\n      style: style,\n      className: cx('&', {\n        '&-density-extended': density === 'extended',\n        '&-density-compressed': density === 'compressed',\n        '&-has-border': hasBorder,\n        '&-has-word-wrap': hasWordWrap,\n        '&-has-light-header': hasLightHeader\n      }, className)\n    }));\n  }\n});\n/**\n * mapToGrid\n *\n * Returns a 2 dimensional array of cell elements of the given component type. The map function can modify value of a cell.\n */\n\nfunction mapToGrid(trList) {\n  var cellType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'td';\n  var mapFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (0, _property3.default)('element');\n  var cellRowList = (0, _map3.default)(trList, function (trElement) {\n    return (0, _map3.default)((0, _componentTypes.filterTypes)(trElement.props.children, cellType));\n  });\n  var grid = [];\n\n  if ((0, _isEmpty3.default)(cellRowList)) {\n    return [];\n  } // iterate over each row\n\n\n  for (var rowIndex = 0; rowIndex < cellRowList.length; rowIndex++) {\n    var cellRow = cellRowList[rowIndex];\n\n    if ((0, _isNil3.default)(grid[rowIndex])) {\n      grid[rowIndex] = [];\n    }\n\n    var canonicalRow = rowIndex; // build out each horizonal duplicates of each cell\n\n    for (var cellElementIndex = 0; cellElementIndex < cellRow.length; cellElementIndex++) {\n      var cellElement = cellRow[cellElementIndex];\n      var colSpan = 1;\n      var isCellIncluded = false;\n\n      if ((0, _isNumber3.default)(cellElement.props.colSpan)) {\n        colSpan = cellElement.props.colSpan;\n      }\n\n      var nilCellIndex = (0, _findIndex3.default)(grid[canonicalRow], _isNil3.default);\n      var originCol = nilCellIndex !== -1 ? nilCellIndex : grid[canonicalRow].length;\n\n      for (var currentColSpan = 0; currentColSpan < colSpan; currentColSpan++) {\n        grid[canonicalRow][originCol + currentColSpan] = {\n          element: cellElement,\n          canonicalPosition: {\n            row: canonicalRow,\n            col: originCol\n          },\n          isOriginal: !isCellIncluded\n        };\n        isCellIncluded = true;\n      }\n    } // build out each vertial duplicates of each cell using the new row in the full grid\n\n\n    for (var colIndex = 0; colIndex < grid[canonicalRow].length; colIndex++) {\n      var gridCell = grid[canonicalRow][colIndex];\n\n      if (gridCell.isOriginal) {\n        var _cellElement = (0, _get3.default)(gridCell, 'element');\n\n        var rowSpan = 1;\n\n        if ((0, _isNumber3.default)((0, _get3.default)(_cellElement, 'props.rowSpan'))) {\n          rowSpan = (0, _get3.default)(_cellElement, 'props.rowSpan');\n        }\n\n        for (var currentRowSpan = 1; currentRowSpan < rowSpan; currentRowSpan++) {\n          if ((0, _isNil3.default)(grid[canonicalRow + currentRowSpan])) {\n            grid[canonicalRow + currentRowSpan] = [];\n          }\n\n          grid[canonicalRow + currentRowSpan][colIndex] = (0, _assign3.default)({}, grid[canonicalRow + currentRowSpan - 1][colIndex], {\n            isOriginal: false\n          });\n        }\n      }\n    }\n  } // map new values to each cell in the final grid\n\n\n  var finalGrid = [];\n\n  for (var _rowIndex = 0; _rowIndex < grid.length; _rowIndex++) {\n    finalGrid[_rowIndex] = [];\n\n    for (var _colIndex = 0; _colIndex < grid[_rowIndex].length; _colIndex++) {\n      finalGrid[_rowIndex][_colIndex] = mapFn(grid[_rowIndex][_colIndex], {\n        row: _rowIndex,\n        col: _colIndex\n      }, finalGrid);\n    }\n  }\n\n  return finalGrid;\n}\n/**\n * renderRowsWithIdentifiedEdges\n *\n * Returns an equivalent list of Tr's where each cell on the perimeter has props set for: `isFirstRow`, `isLastRow`, `isFirstCol`, `isLastCol`, and `isFirstSingle`\n */\n\n\nfunction renderRowsWithIdentifiedEdges(trList, cellType) {\n  var duplicateReferences = [];\n  var fullCellGrid = mapToGrid(trList, cellType, function (_ref5, currentPos, grid) {\n    var props = _ref5.element.props,\n        isOriginal = _ref5.isOriginal,\n        canonicalPosition = _ref5.canonicalPosition;\n\n    if (!isOriginal) {\n      // if cell spans multiple positions\n      // store current position and return original cell props reference\n      duplicateReferences.push(currentPos);\n      return grid[canonicalPosition.row][canonicalPosition.col];\n    }\n\n    return (0, _assign3.default)({}, props); // return a new props object based on old cell\n  });\n\n  if ((0, _isEmpty3.default)(fullCellGrid)) {\n    return [];\n  }\n\n  var firstRowIndex = 0;\n  var lastRowIndex = fullCellGrid.length - 1;\n  var firstColIndex = 0;\n  var lastColIndex = (0, _first3.default)(fullCellGrid).length - 1;\n  var firstSingleLookup = {}; // decorate the props of each cell with props that indicate its role in the table\n\n  (0, _forEach3.default)(fullCellGrid, function (cellList, rowIndex) {\n    return (0, _forEach3.default)(cellList, function (cellProps, colIndex) {\n      if (!(0, _isNull3.default)(cellProps)) {\n        if (rowIndex === firstRowIndex) {\n          cellProps.isFirstRow = true;\n        }\n\n        if (rowIndex === lastRowIndex) {\n          cellProps.isLastRow = true;\n        }\n\n        if (colIndex === firstColIndex) {\n          cellProps.isFirstCol = true;\n        }\n\n        if (colIndex === lastColIndex) {\n          cellProps.isLastCol = true;\n        }\n      }\n\n      if (!(0, _has3.default)(firstSingleLookup, rowIndex)) {\n        (0, _set3.default)(firstSingleLookup, rowIndex, false);\n      }\n\n      if (!(0, _get3.default)(firstSingleLookup, rowIndex) && (0, _get3.default)(cellProps, 'rowSpan', 1) === 1) {\n        (0, _set3.default)(firstSingleLookup, rowIndex, true);\n        cellProps.isFirstSingle = true;\n      }\n    });\n  });\n  (0, _forEach3.default)(duplicateReferences, function (_ref6) {\n    var row = _ref6.row,\n        col = _ref6.col;\n    fullCellGrid[row][col] = null; // remove duplicate references from grid\n  }); // render the grid back to elements using the updated cell props\n\n  return (0, _map3.default)(trList, function (trElement, rowIndex) {\n    return _react2.default.createElement(Tr, _extends({}, trElement.props, {\n      key: rowIndex\n    }), (0, _reduce3.default)(fullCellGrid[rowIndex], function (rowChildren, cellProps, colIndex) {\n      return rowChildren.concat(!(0, _isNull3.default)(cellProps) ? [_react2.default.createElement(cellType, (0, _assign3.default)({}, cellProps, {\n        key: colIndex\n      }))] : []);\n    }, []));\n  });\n}\n\nexports.default = Table;","map":null,"metadata":{},"sourceType":"script"}