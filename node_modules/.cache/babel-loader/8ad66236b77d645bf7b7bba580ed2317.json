{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PieChartDumb = undefined;\n\nvar _partial2 = require('lodash/partial');\n\nvar _partial3 = _interopRequireDefault(_partial2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _identity2 = require('lodash/identity');\n\nvar _identity3 = _interopRequireDefault(_identity2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _d3Shape = require('d3-shape');\n\nvar d3Shape = _interopRequireWildcard(_d3Shape);\n\nvar _charts = require('../../constants/charts');\n\nvar chartConstants = _interopRequireWildcard(_charts);\n\nvar _stateManagement = require('../../util/state-management');\n\nvar _Line = require('../../components/Line/Line');\n\nvar _Line2 = _interopRequireDefault(_Line);\n\nvar _ToolTip = require('../../components/ToolTip/ToolTip');\n\nvar _PieChart = require('./PieChart.reducers');\n\nvar reducers = _interopRequireWildcard(_PieChart);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-PieChart');\n\nvar string = _propTypes2.default.string,\n    number = _propTypes2.default.number,\n    arrayOf = _propTypes2.default.arrayOf,\n    bool = _propTypes2.default.bool,\n    shape = _propTypes2.default.shape,\n    object = _propTypes2.default.object,\n    func = _propTypes2.default.func;\nvar DONUT_WIDTH = 15;\nvar HOVER_SCALE = 1.1; // duplicated in .less file\n\nvar INNER_RADIUS = 0.5;\nvar PieChart = (0, _componentTypes.createClass)({\n  displayName: 'PieChart',\n  statics: {\n    HOVER_SCALE: HOVER_SCALE,\n    DONUT_WIDTH: DONUT_WIDTH,\n    MARGIN: {\n      top: 10,\n      right: 10,\n      bottom: 10,\n      left: 10\n    }\n  },\n  reducers: reducers,\n  propTypes: {\n    style: object,\n    className: string,\n    height: number,\n    width: number,\n    margin: shape({\n      top: number,\n      right: number,\n      bottom: number,\n      left: number\n    }),\n    data: arrayOf(object),\n    hasToolTips: bool,\n    hasStroke: bool,\n    palette: arrayOf(string),\n    colorMap: object,\n    ToolTip: shape(_ToolTip.ToolTipDumb.propTypes),\n    isDonut: bool,\n    isHovering: bool,\n    hoveringIndex: number,\n    onMouseOver: func,\n    onMouseOut: func,\n    donutWidth: number,\n    xAxisField: string,\n    xAxisFormatter: func,\n    yAxisField: string,\n    yAxisFormatter: func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      height: 200,\n      width: 200,\n      // duplicated because `statics` aren't available during getDefaultProps\n      margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10\n      },\n      palette: chartConstants.PALETTE_6,\n      hasToolTips: true,\n      hasStroke: true,\n      isDonut: false,\n      donutWidth: DONUT_WIDTH,\n      ToolTip: _ToolTip.ToolTipDumb.getDefaultProps(),\n      isHovering: false,\n      hoveringIndex: 0,\n      onMouseOver: _noop3.default,\n      onMouseOut: _noop3.default,\n      xAxisField: 'x',\n      xAxisFormatter: _identity3.default,\n      yAxisField: 'y',\n      yAxisFormatter: _identity3.default\n    };\n  },\n  handleMouseOver: function handleMouseOver(index, event) {\n    this.props.onMouseOver(index, {\n      props: this.props,\n      event: event\n    });\n  },\n  handleMouseOut: function handleMouseOut(event) {\n    this.props.onMouseOut({\n      props: this.props,\n      event: event\n    });\n  },\n  render: function render() {\n    var _this = this;\n\n    var _props = this.props,\n        style = _props.style,\n        className = _props.className,\n        height = _props.height,\n        width = _props.width,\n        marginOriginal = _props.margin,\n        data = _props.data,\n        hasToolTips = _props.hasToolTips,\n        hasStroke = _props.hasStroke,\n        palette = _props.palette,\n        colorMap = _props.colorMap,\n        isDonut = _props.isDonut,\n        toolTipProps = _props.ToolTip,\n        isHovering = _props.isHovering,\n        hoveringIndex = _props.hoveringIndex,\n        xAxisField = _props.xAxisField,\n        xAxisFormatter = _props.xAxisFormatter,\n        yAxisField = _props.yAxisField,\n        yAxisFormatter = _props.yAxisFormatter,\n        passThroughs = _objectWithoutProperties(_props, ['style', 'className', 'height', 'width', 'margin', 'data', 'hasToolTips', 'hasStroke', 'palette', 'colorMap', 'isDonut', 'ToolTip', 'isHovering', 'hoveringIndex', 'xAxisField', 'xAxisFormatter', 'yAxisField', 'yAxisFormatter']);\n\n    var margin = _extends({}, PieChart.MARGIN, marginOriginal);\n\n    var svgClasses = cx(className, '&'); // TODO: Consider displaying something specific when there is no data,\n    // perhaps a loading indicator.\n\n    if ((0, _isEmpty3.default)(data) || width < 1 || height < 1) {\n      return _react2.default.createElement('svg', _extends({}, (0, _componentTypes.omitProps)((0, _componentTypes.omitProps)(passThroughs, _ToolTip.ToolTipDumb), PieChart), {\n        style: style,\n        className: svgClasses,\n        width: width,\n        height: height\n      }));\n    }\n\n    var innerWidth = width - margin.left - margin.right;\n    var innerHeight = height - margin.top - margin.bottom;\n    var outerRadius = Math.min(innerWidth, innerHeight) / 2;\n    var arc = d3Shape.arc().innerRadius(isDonut ? outerRadius - PieChart.DONUT_WIDTH : INNER_RADIUS).outerRadius(outerRadius); // Useful for capturing hovers when we're in donut mode\n\n    var arcFull = d3Shape.arc().innerRadius(0).outerRadius(outerRadius);\n    var pie = d3Shape.pie().sort(null); // needed to put the slices in proper order\n\n    var pieData = pie((0, _map3.default)(data, yAxisField));\n    return _react2.default.createElement('svg', _extends({}, (0, _componentTypes.omitProps)((0, _componentTypes.omitProps)(passThroughs, _ToolTip.ToolTipDumb), PieChart), {\n      style: style,\n      className: svgClasses,\n      width: width,\n      height: height\n    }), _react2.default.createElement(_ToolTip.ToolTipDumb, _extends({}, toolTipProps, {\n      isExpanded: hasToolTips && isHovering,\n      onMouseOver: _noop3.default,\n      onMouseOut: this.handleMouseOut\n    }), _react2.default.createElement(_ToolTip.ToolTipDumb.Target, {\n      elementType: 'g'\n    }, _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + margin.top + ')'\n    }, _react2.default.createElement('g', {\n      transform: 'translate(' + innerWidth / 2 + ', ' + innerHeight / 2 + ')'\n    }, (0, _map3.default)(pieData, function (pieDatum, index) {\n      return _react2.default.createElement('g', {\n        key: index,\n        className: cx('&-slice-group', {\n          '&-slice-group-is-hovering': isHovering && hoveringIndex === index\n        })\n      }, _react2.default.createElement(_Line2.default, {\n        key: index,\n        className: cx('&-slice', {\n          '&-slice-has-stroke': hasStroke\n        }),\n        d: arc(pieDatum),\n        color: (0, _get3.default)(colorMap, data[index][xAxisField], palette[index % palette.length]),\n        transform: 'scale(' + (isHovering && hoveringIndex === index ? HOVER_SCALE : 1) + ')'\n      }), _react2.default.createElement('path', {\n        className: cx('&-slice-hover'),\n        d: arcFull(pieDatum),\n        transform: 'scale(' + HOVER_SCALE + ')',\n        onMouseOver: (0, _partial3.default)(_this.handleMouseOver, index),\n        onMouseOut: hasToolTips ? _noop3.default : _this.handleMouseOut\n      }));\n    })))), _react2.default.createElement(_ToolTip.ToolTipDumb.Title, null, xAxisFormatter((0, _get3.default)(data, '[' + hoveringIndex + '].' + xAxisField))), _react2.default.createElement(_ToolTip.ToolTipDumb.Body, null, yAxisFormatter((0, _get3.default)(data, '[' + hoveringIndex + '].' + yAxisField)))));\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(PieChart);\nexports.PieChartDumb = PieChart;","map":null,"metadata":{},"sourceType":"script"}