{"ast":null,"code":"import produce from \"immer\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSagas from \"./sagas\";\nexport var actionTypes = {\n  ORIENTATION: \"ORIENTATION\",\n  GEOLOCATION: \"GEOLOCATION\",\n  CAMERA_MOVE: \"CAMERA_MOVE\",\n  PLACE_USER: \"PLACE_USER\",\n  USER_MOVED: \"USER_MOVED\",\n  START_HEADING: \"START_HEADING\",\n  START_LOCATION: \"START_LOCATION\",\n  SELECT_ROOM: \"SELECT_ROOM\"\n};\nvar initialState = {\n  initialHeading: null,\n  initialLocation: null,\n  orientation: null,\n  coords: {},\n  userPosition: null,\n  targetRoomName: undefined\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case \"ERROR\":\n        draft.error = action.error;\n        break;\n\n      case actionTypes.ORIENTATION:\n        // draft.initialHeading = action.orientation.webkitCompassHeading;\n        draft.orientation = action.orientation;\n        break;\n\n      case actionTypes.GEOLOCATION:\n        draft.coords = action.coords;\n        break;\n\n      case actionTypes.PLACE_USER:\n        draft.distanceTraveled = action.distance;\n        draft.userPosition = action.position;\n        break;\n\n      case actionTypes.START_HEADING:\n        draft.initialHeading = action.heading;\n        break;\n\n      case actionTypes.START_LOCATION:\n        draft.initialLocation = action.location;\n        break;\n\n      case action.SELECT_ROOM:\n        draft.targetRoomName = action.data;\n        break;\n\n      default:\n        break;\n    }\n  });\n}\n\nvar sagaMiddleware = createSagaMiddleware();\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(rootSagas);\nexport default store;","map":{"version":3,"sources":["/Users/lpoehler/workspaces/ar-roomfinder/src/store.js"],"names":["produce","applyMiddleware","compose","createStore","createSagaMiddleware","rootSagas","actionTypes","ORIENTATION","GEOLOCATION","CAMERA_MOVE","PLACE_USER","USER_MOVED","START_HEADING","START_LOCATION","SELECT_ROOM","initialState","initialHeading","initialLocation","orientation","coords","userPosition","targetRoomName","undefined","reducer","state","action","draft","type","error","distanceTraveled","distance","position","heading","location","data","sagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,SAAtB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,WAAW,EAAE,aADY;AAEzBC,EAAAA,WAAW,EAAE,aAFY;AAGzBC,EAAAA,WAAW,EAAE,aAHY;AAIzBC,EAAAA,UAAU,EAAE,YAJa;AAKzBC,EAAAA,UAAU,EAAE,YALa;AAMzBC,EAAAA,aAAa,EAAE,eANU;AAOzBC,EAAAA,cAAc,EAAE,gBAPS;AAQzBC,EAAAA,WAAW,EAAE;AARY,CAApB;AAWP,IAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,IADG;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,WAAW,EAAE,IAHM;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,YAAY,EAAE,IALK;AAMnBC,EAAAA,cAAc,EAAEC;AANG,CAArB;;AASA,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBT,YAAsB;AAAA,MAARU,MAAQ;AAC7C,SAAOzB,OAAO,CAACwB,KAAD,EAAQ,UAAAE,KAAK,EAAI;AAC7B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAK,OAAL;AACED,QAAAA,KAAK,CAACE,KAAN,GAAcH,MAAM,CAACG,KAArB;AACA;;AACF,WAAKtB,WAAW,CAACC,WAAjB;AACE;AACAmB,QAAAA,KAAK,CAACR,WAAN,GAAoBO,MAAM,CAACP,WAA3B;AACA;;AACF,WAAKZ,WAAW,CAACE,WAAjB;AACEkB,QAAAA,KAAK,CAACP,MAAN,GAAeM,MAAM,CAACN,MAAtB;AACA;;AACF,WAAKb,WAAW,CAACI,UAAjB;AACEgB,QAAAA,KAAK,CAACG,gBAAN,GAAyBJ,MAAM,CAACK,QAAhC;AACAJ,QAAAA,KAAK,CAACN,YAAN,GAAqBK,MAAM,CAACM,QAA5B;AACA;;AACF,WAAKzB,WAAW,CAACM,aAAjB;AACEc,QAAAA,KAAK,CAACV,cAAN,GAAuBS,MAAM,CAACO,OAA9B;AACA;;AACF,WAAK1B,WAAW,CAACO,cAAjB;AACEa,QAAAA,KAAK,CAACT,eAAN,GAAwBQ,MAAM,CAACQ,QAA/B;AACA;;AACF,WAAKR,MAAM,CAACX,WAAZ;AACEY,QAAAA,KAAK,CAACL,cAAN,GAAuBI,MAAM,CAACS,IAA9B;AACA;;AACF;AACE;AAzBJ;AA2BD,GA5Ba,CAAd;AA6BD;;AAED,IAAMC,cAAc,GAAG/B,oBAAoB,EAA3C;AAEA,IAAMgC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CpC,OAAxE;AAEA,IAAMqC,KAAK,GAAGpC,WAAW,CACvBoB,OADuB,EAEvBa,gBAAgB,CAACnC,eAAe,CAACkC,cAAD,CAAhB,CAFO,CAAzB;AAKAA,cAAc,CAACK,GAAf,CAAmBnC,SAAnB;AAEA,eAAekC,KAAf","sourcesContent":["import produce from \"immer\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootSagas from \"./sagas\";\n\nexport const actionTypes = {\n  ORIENTATION: \"ORIENTATION\",\n  GEOLOCATION: \"GEOLOCATION\",\n  CAMERA_MOVE: \"CAMERA_MOVE\",\n  PLACE_USER: \"PLACE_USER\",\n  USER_MOVED: \"USER_MOVED\",\n  START_HEADING: \"START_HEADING\",\n  START_LOCATION: \"START_LOCATION\",\n  SELECT_ROOM: \"SELECT_ROOM\",\n};\n\nconst initialState = {\n  initialHeading: null,\n  initialLocation: null,\n  orientation: null,\n  coords: {},\n  userPosition: null,\n  targetRoomName: undefined,\n};\n\nfunction reducer(state = initialState, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case \"ERROR\":\n        draft.error = action.error;\n        break;\n      case actionTypes.ORIENTATION:\n        // draft.initialHeading = action.orientation.webkitCompassHeading;\n        draft.orientation = action.orientation;\n        break;\n      case actionTypes.GEOLOCATION:\n        draft.coords = action.coords;\n        break;\n      case actionTypes.PLACE_USER:\n        draft.distanceTraveled = action.distance;\n        draft.userPosition = action.position;\n        break;\n      case actionTypes.START_HEADING:\n        draft.initialHeading = action.heading;\n        break;\n      case actionTypes.START_LOCATION:\n        draft.initialLocation = action.location;\n        break;\n      case action.SELECT_ROOM:\n        draft.targetRoomName = action.data;\n        break;\n      default:\n        break;\n    }\n  });\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSagas);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}