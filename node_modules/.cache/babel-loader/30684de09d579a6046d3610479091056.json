{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VerticalListMenuDumb = undefined;\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _partial2 = require('lodash/partial');\n\nvar _partial3 = _interopRequireDefault(_partial2);\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _filter2 = require('lodash/filter');\n\nvar _filter3 = _interopRequireDefault(_filter2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _stateManagement = require('../../util/state-management');\n\nvar _VerticalListMenu = require('./VerticalListMenu.reducers');\n\nvar reducers = _interopRequireWildcard(_VerticalListMenu);\n\nvar _ChevronIcon = require('../Icon/ChevronIcon/ChevronIcon');\n\nvar _ChevronIcon2 = _interopRequireDefault(_ChevronIcon);\n\nvar _Collapsible = require('../Collapsible/Collapsible');\n\nvar _Collapsible2 = _interopRequireDefault(_Collapsible);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = (0, _styleHelpers.bindClassNames)('lucid-VerticalListMenu');\nvar func = _propTypes2.default.func,\n    arrayOf = _propTypes2.default.arrayOf,\n    bool = _propTypes2.default.bool,\n    string = _propTypes2.default.string,\n    number = _propTypes2.default.number,\n    node = _propTypes2.default.node,\n    object = _propTypes2.default.object,\n    shape = _propTypes2.default.shape;\nvar VerticalListMenu = (0, _componentTypes.createClass)({\n  displayName: 'VerticalListMenu',\n  statics: {},\n  reducers: reducers,\n  components: {\n    Item: (0, _componentTypes.createClass)({\n      displayName: 'VerticalListMenu.Item',\n      statics: {},\n      propTypes: {\n        hasExpander: bool,\n        isExpanded: bool,\n        isSelected: bool,\n        isActionable: bool,\n        onSelect: func,\n        onToggle: func,\n        Collapsible: shape(_Collapsible2.default.propTypes)\n      }\n    })\n  },\n  propTypes: {\n    children: node,\n    className: string,\n    style: object,\n    selectedIndices: arrayOf(number),\n    expandedIndices: arrayOf(number),\n    onSelect: func,\n    onToggle: func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      onSelect: _noop3.default,\n      onToggle: _noop3.default,\n      expandedIndices: [],\n      selectedIndices: []\n    };\n  },\n  render: function render() {\n    var _this = this;\n\n    var _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        style = _props.style,\n        selectedIndices = _props.selectedIndices,\n        expandedIndices = _props.expandedIndices,\n        passThroughs = _objectWithoutProperties(_props, ['children', 'className', 'style', 'selectedIndices', 'expandedIndices']);\n\n    var itemChildProps = (0, _map3.default)((0, _componentTypes.findTypes)(this.props, VerticalListMenu.Item), 'props');\n    return _react2.default.createElement('ul', _extends({}, (0, _componentTypes.omitProps)(passThroughs, VerticalListMenu), {\n      className: cx('&', className),\n      style: style\n    }), (0, _map3.default)(itemChildProps, function (itemChildProp, index) {\n      var _itemChildProp$hasExp = itemChildProp.hasExpander,\n          hasExpander = _itemChildProp$hasExp === undefined ? false : _itemChildProp$hasExp,\n          _itemChildProp$isActi = itemChildProp.isActionable,\n          isActionable = _itemChildProp$isActi === undefined ? true : _itemChildProp$isActi,\n          _itemChildProp$Collap = itemChildProp.Collapsible,\n          collapsibleProps = _itemChildProp$Collap === undefined ? _Collapsible2.default.getDefaultProps() : _itemChildProp$Collap;\n\n      var itemChildrenAsArray = _react2.default.Children.toArray(itemChildProp.children); // Was not able to get `child.Type` to work correctly, I suspect this\n      // is due to the way we wrap components with createLucidComponentDefinition\n\n\n      var listChildren = (0, _filter3.default)(itemChildrenAsArray, function (child) {\n        return (0, _get3.default)(child, 'type.displayName', '') === 'VerticalListMenu';\n      });\n      var otherChildren = (0, _filter3.default)(itemChildrenAsArray, function (child) {\n        return (0, _get3.default)(child, 'type.displayName', '') !== 'VerticalListMenu';\n      }); // If the prop is found on the child, it should override what was\n      // passed in at the top level for selectedIndices and expandedIndices\n\n      var actualIsExpanded = (0, _has3.default)(itemChildProp, 'isExpanded') ? (0, _get3.default)(itemChildProp, 'isExpanded', true) : (0, _includes3.default)(expandedIndices, index);\n      var actualIsSelected = (0, _has3.default)(itemChildProp, 'isSelected') ? (0, _get3.default)(itemChildProp, 'isSelected', false) : (0, _includes3.default)(selectedIndices, index);\n      return _react2.default.createElement('li', _extends({\n        key: index\n      }, itemChildProp.passThroughs, {\n        className: cx('&-Item', itemChildProp.className)\n      }), _react2.default.createElement('div', {\n        className: cx('&-Item-content', {\n          '&-Item-content-is-selected': actualIsSelected,\n          '&-Item-content-is-actionable': isActionable\n        }),\n        onClick: (0, _partial3.default)(_this.handleClickItem, index, itemChildProp)\n      }, _react2.default.createElement('div', {\n        className: cx('&-Item-content-text')\n      }, otherChildren), hasExpander ? _react2.default.createElement('div', {\n        className: cx('&-Item-expander'),\n        onClick: (0, _partial3.default)(_this.handleToggle, index, itemChildProp)\n      }, _react2.default.createElement(_ChevronIcon2.default, {\n        direction: actualIsExpanded ? 'up' : 'down'\n      })) : null), !(0, _isEmpty3.default)(listChildren) ? _react2.default.createElement(_Collapsible2.default, _extends({}, collapsibleProps, {\n        className: cx('&-Item-nested-list'),\n        isExpanded: actualIsExpanded\n      }), listChildren) : null);\n    }), children);\n  },\n  handleToggle: function handleToggle(index, itemChildProp, event) {\n    var onToggle = itemChildProp.onToggle; // Prevent the user from also selecting the current item.\n\n    event.stopPropagation();\n    this.props.onToggle(index, {\n      event: event,\n      props: itemChildProp\n    });\n\n    if (onToggle) {\n      onToggle(index, {\n        event: event,\n        props: itemChildProp\n      });\n    }\n  },\n  handleClickItem: function handleClickItem(index, itemChildProp, event) {\n    var onSelect = itemChildProp.onSelect;\n    this.props.onSelect(index, {\n      event: event,\n      props: itemChildProp\n    });\n\n    if (onSelect) {\n      onSelect(index, {\n        event: event,\n        props: itemChildProp\n      });\n    }\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(VerticalListMenu);\nexports.VerticalListMenuDumb = VerticalListMenu;","map":null,"metadata":{},"sourceType":"script"}