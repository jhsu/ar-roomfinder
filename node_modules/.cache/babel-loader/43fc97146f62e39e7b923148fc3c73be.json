{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _omit2 = require('lodash/omit');\n\nvar _omit3 = _interopRequireDefault(_omit2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _OverlayWrapper = require('../OverlayWrapper/OverlayWrapper');\n\nvar _OverlayWrapper2 = _interopRequireDefault(_OverlayWrapper);\n\nvar _LoadingMessage = require('../LoadingMessage/LoadingMessage');\n\nvar _LoadingMessage2 = _interopRequireDefault(_LoadingMessage);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-LoadingIndicator');\n\nvar bool = _propTypes2.default.bool,\n    node = _propTypes2.default.node,\n    oneOf = _propTypes2.default.oneOf,\n    string = _propTypes2.default.string;\nvar LoadingIndicator = (0, _componentTypes.createClass)({\n  displayName: 'LoadingIndicator',\n  statics: {},\n  propTypes: {\n    hasOverlay: bool,\n    className: string,\n    children: node,\n    isLoading: bool,\n    overlayKind: oneOf(['light', 'dark'])\n  },\n  components: {\n    LoadingMessage: _LoadingMessage2.default\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      hasOverlay: true,\n      isLoading: false,\n      overlayKind: 'light'\n    };\n  },\n  render: function render() {\n    var props = this.props,\n        _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        isLoading = _props.isLoading;\n    var LoadingMessage = LoadingIndicator.LoadingMessage;\n\n    var messageElement = (0, _componentTypes.getFirst)(props, LoadingMessage) || _react2.default.createElement(LoadingMessage, null);\n\n    var otherChildren = (0, _componentTypes.rejectTypes)(children, LoadingMessage);\n    return _react2.default.createElement(_OverlayWrapper2.default, _extends({}, (0, _omit3.default)(props, ['children', 'className', 'isLoading']), {\n      className: cx('&', className),\n      isVisible: isLoading\n    }), otherChildren, _react2.default.createElement(_OverlayWrapper2.default.Message, null, messageElement));\n  }\n});\nexports.default = LoadingIndicator;","map":null,"metadata":{},"sourceType":"script"}