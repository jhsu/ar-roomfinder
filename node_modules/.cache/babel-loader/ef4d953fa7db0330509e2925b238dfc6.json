{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _flatten2 = require('lodash/flatten');\n\nvar _flatten3 = _interopRequireDefault(_flatten2);\n\nvar _max2 = require('lodash/max');\n\nvar _max3 = _interopRequireDefault(_max2);\n\nvar _isDate2 = require('lodash/isDate');\n\nvar _isDate3 = _interopRequireDefault(_isDate2);\n\nvar _isFinite2 = require('lodash/isFinite');\n\nvar _isFinite3 = _interopRequireDefault(_isFinite2);\n\nvar _last2 = require('lodash/last');\n\nvar _last3 = _interopRequireDefault(_last2);\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _chartHelpers = require('../../util/chart-helpers');\n\nvar _d3Shape = require('d3-shape');\n\nvar d3Shape = _interopRequireWildcard(_d3Shape);\n\nvar _charts = require('../../constants/charts');\n\nvar chartConstants = _interopRequireWildcard(_charts);\n\nvar _Point = require('../Point/Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-Points');\n\nvar arrayOf = _propTypes2.default.arrayOf,\n    func = _propTypes2.default.func,\n    number = _propTypes2.default.number,\n    object = _propTypes2.default.object,\n    bool = _propTypes2.default.bool,\n    string = _propTypes2.default.string;\n\nfunction isValidSeries(series) {\n  if ((0, _isArray3.default)(series)) {\n    var last = (0, _last3.default)(series);\n    return (0, _isFinite3.default)(last) || (0, _isDate3.default)(last);\n  }\n\n  return (0, _isFinite3.default)(series) || (0, _isDate3.default)(series);\n}\n\nvar Points = (0, _componentTypes.createClass)({\n  displayName: 'Points',\n  statics: {},\n  propTypes: {\n    className: string,\n    palette: arrayOf(string),\n    colorMap: object,\n    data: arrayOf(object).isRequired,\n    xScale: func.isRequired,\n    yScale: func.isRequired,\n    xField: string,\n    yFields: arrayOf(string),\n    yStackedMax: number,\n    colorOffset: number,\n    hasStroke: bool,\n    isStacked: bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      xField: 'x',\n      yFields: ['y'],\n      colorOffset: 0,\n      hasStroke: true,\n      isStacked: false,\n      palette: chartConstants.PALETTE_6\n    };\n  },\n  render: function render() {\n    var _props = this.props,\n        className = _props.className,\n        data = _props.data,\n        palette = _props.palette,\n        colorMap = _props.colorMap,\n        colorOffset = _props.colorOffset,\n        xField = _props.xField,\n        hasStroke = _props.hasStroke,\n        xScale = _props.xScale,\n        yFields = _props.yFields,\n        yStackedMax = _props.yStackedMax,\n        isStacked = _props.isStacked,\n        yScaleOriginal = _props.yScale,\n        passThroughs = _objectWithoutProperties(_props, ['className', 'data', 'palette', 'colorMap', 'colorOffset', 'xField', 'hasStroke', 'xScale', 'yFields', 'yStackedMax', 'isStacked', 'yScale']); // Copy the original so we can mutate it\n\n\n    var yScale = yScaleOriginal.copy(); // If we are stacked, we need to calculate a new domain based on the sum of\n    // the various series' y data. One row per series.\n\n    var transformedData = isStacked ? d3Shape.stack().keys(yFields)(data) : (0, _chartHelpers.groupByFields)(data, yFields); // If we are stacked, we need to calculate a new domain based on the sum of\n    // the various group's y data\n\n    if (isStacked) {\n      yScale.domain([yScale.domain()[0], yStackedMax || (0, _max3.default)((0, _flatten3.default)((0, _last3.default)(transformedData)))]);\n    }\n\n    return _react2.default.createElement('g', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Points), {\n      className: cx(className, '&')\n    }), (0, _map3.default)(transformedData, function (d, dIndex) {\n      return (0, _map3.default)(d, function (series, seriesIndex) {\n        return isValidSeries(series) ? _react2.default.createElement(_Point2.default, {\n          key: '' + seriesIndex + dIndex,\n          x: xScale(data[seriesIndex][xField]),\n          y: yScale((0, _isArray3.default)(series) ? (0, _last3.default)(series) : series),\n          hasStroke: hasStroke,\n          kind: dIndex + colorOffset,\n          color: (0, _get3.default)(colorMap, yFields[dIndex], palette[(dIndex + colorOffset) % palette.length])\n        }) : null;\n      });\n    }));\n  }\n});\nexports.default = Points;","map":null,"metadata":{},"sourceType":"script"}