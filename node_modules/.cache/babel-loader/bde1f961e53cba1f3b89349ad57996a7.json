{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isUndefined2 = require('lodash/isUndefined');\n\nvar _isUndefined3 = _interopRequireDefault(_isUndefined2);\n\nvar _negate2 = require('lodash/negate');\n\nvar _negate3 = _interopRequireDefault(_negate2);\n\nvar _pickBy2 = require('lodash/pickBy');\n\nvar _pickBy3 = _interopRequireDefault(_pickBy2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-Icon');\n\nvar any = _propTypes2.default.any,\n    string = _propTypes2.default.string,\n    number = _propTypes2.default.number,\n    object = _propTypes2.default.object,\n    bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func;\nvar Icon = (0, _componentTypes.createClass)({\n  displayName: 'Icon',\n  statics: {},\n  propTypes: {\n    style: object,\n    className: any,\n    size: number,\n    viewBox: string,\n    aspectRatio: string,\n    isBadge: bool,\n    isClickable: bool,\n    isDisabled: bool,\n    onSelect: func,\n    children: any\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      size: 16,\n      aspectRatio: 'xMidYMid meet',\n      viewBox: '0 0 16 16',\n      isBadge: false,\n      isDisabled: false,\n      isClickable: false\n    };\n  },\n  handleClick: function handleClick(event) {\n    var _props = this.props,\n        onClick = _props.onClick,\n        isDisabled = _props.isDisabled,\n        isClickable = _props.isClickable,\n        onSelect = _props.onSelect;\n\n    var domNode = _reactDom2.default.findDOMNode(this);\n\n    if (onClick) {\n      onClick(event);\n    }\n\n    if (onSelect && isClickable && !isDisabled) {\n      domNode.focus();\n      onSelect({\n        event: event,\n        props: this.props\n      });\n    }\n  },\n  render: function render() {\n    var _props2 = this.props,\n        className = _props2.className,\n        children = _props2.children,\n        size = _props2.size,\n        style = _props2.style,\n        viewBox = _props2.viewBox,\n        aspectRatio = _props2.aspectRatio,\n        isBadge = _props2.isBadge,\n        isClickable = _props2.isClickable,\n        isDisabled = _props2.isDisabled,\n        passThroughs = _objectWithoutProperties(_props2, ['className', 'children', 'size', 'style', 'viewBox', 'aspectRatio', 'isBadge', 'isClickable', 'isDisabled']); // Because we control the icon size inline, we must also control the border\n    // radius in the case where they user wants `isBadge`. Later one, we filter\n    // out any `undefined` properties using lodash methods.\n\n\n    var actualStyle = _extends({}, style, {\n      borderRadius: (0, _get3.default)(style, 'borderRadius', isBadge ? size + 'px' : undefined)\n    });\n\n    return _react2.default.createElement('svg', _extends({\n      width: size,\n      height: size,\n      viewBox: viewBox,\n      preserveAspectRatio: aspectRatio\n    }, (0, _componentTypes.omitProps)(passThroughs, Icon), {\n      style: (0, _pickBy3.default)(actualStyle, (0, _negate3.default)(_isUndefined3.default)),\n      className: cx('&', {\n        '&-is-badge': isBadge,\n        '&-is-clickable': !isDisabled && isClickable,\n        '&-is-disabled': isDisabled\n      }, className),\n      onClick: this.handleClick\n    }), children);\n  }\n});\nexports.default = Icon;","map":null,"metadata":{},"sourceType":"script"}