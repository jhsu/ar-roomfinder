{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logger = exports.isNode = exports.isDevMode = undefined;\n\nvar _unset2 = require('lodash/unset');\n\nvar _unset3 = _interopRequireDefault(_unset2);\n\nvar _set2 = require('lodash/set');\n\nvar _set3 = _interopRequireDefault(_set2);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.checkIsDev = checkIsDev;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*eslint no-console: 0*/\n\n\nvar isDevMode = exports.isDevMode = function isReactInDev() {\n  // This property gets injected via Webpack.\n  return process.env.NODE_ENV !== 'production'; // eslint-disable-line no-undef\n}();\n\nvar isNode = exports.isNode = (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process.title === 'node';\n\nvar logger = exports.logger = function () {\n  return checkIsDev() ? {\n    log: log,\n    logOnce: logOnce,\n    warn: warn,\n    warnOnce: warnOnce,\n    error: error,\n    errorOnce: errorOnce,\n    resetOnce: resetOnce\n  } : {\n    log: _noop3.default,\n    logOnce: _noop3.default,\n    warn: _noop3.default,\n    warnOnce: _noop3.default,\n    error: _noop3.default,\n    errorOnce: _noop3.default,\n    resetOnce: _noop3.default\n  };\n}();\n\nvar onceMap = {};\n\nfunction once(key, fn) {\n  if (!(0, _has3.default)(onceMap, key)) {\n    (0, _set3.default)(onceMap, key, true);\n    fn();\n  }\n}\n\nfunction resetOnce(key) {\n  (0, _unset3.default)(onceMap, key);\n}\n\nfunction checkIsDev() {\n  return isDevMode && typeof window !== 'undefined' && typeof console !== 'undefined';\n}\n\nfunction log() {\n  var _console;\n\n  (_console = console).log.apply(_console, arguments);\n\n  try {\n    // --- Welcome to debugging Lucid ---\n    // This error was thrown as a convenience so that you can use this\n    // stack to find the callsite that caused this warning to fire.\n    throw new Error(arguments.length <= 0 ? undefined : arguments[0]);\n  } catch (x) {\n    /* */\n  }\n}\n\nfunction logOnce(key) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  once(key, function () {\n    return log.apply(undefined, args);\n  });\n}\n\nfunction warn() {\n  var _console2;\n\n  (_console2 = console).warn.apply(_console2, arguments);\n\n  try {\n    // --- Welcome to debugging Lucid ---\n    // This error was thrown as a convenience so that you can use this\n    // stack to find the callsite that caused this warning to fire.\n    throw new Error(arguments.length <= 0 ? undefined : arguments[0]);\n  } catch (x) {\n    /* */\n  }\n}\n\nfunction warnOnce(key) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  once(key, function () {\n    return warn.apply(undefined, args);\n  });\n}\n\nfunction error() {\n  var _console3;\n\n  (_console3 = console).error.apply(_console3, arguments);\n\n  try {\n    // --- Welcome to debugging Lucid ---\n    // This error was thrown as a convenience so that you can use this\n    // stack to find the callsite that caused this warning to fire.\n    throw new Error(arguments.length <= 0 ? undefined : arguments[0]);\n  } catch (x) {\n    /* */\n  }\n}\n\nfunction errorOnce(key) {\n  for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  once(key, function () {\n    return error.apply(undefined, args);\n  });\n}","map":null,"metadata":{},"sourceType":"script"}