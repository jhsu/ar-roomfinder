{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-Button');\n\nvar arrayOf = _propTypes2.default.arrayOf,\n    bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func,\n    node = _propTypes2.default.node,\n    oneOf = _propTypes2.default.oneOf,\n    oneOfType = _propTypes2.default.oneOfType,\n    string = _propTypes2.default.string;\nvar Button = (0, _componentTypes.createClass)({\n  displayName: 'Button',\n  statics: {},\n  propName: 'Button',\n  propTypes: {\n    isDisabled: bool,\n    isActive: bool,\n    className: string,\n    hasOnlyIcon: bool,\n    children: oneOfType([node, arrayOf(node)]),\n    kind: oneOf(['primary', 'link', 'success', 'warning', 'danger', 'info', 'invisible']),\n    size: oneOf(['short', 'small', 'large']),\n    onClick: func,\n    type: string\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isDisabled: false,\n      isActive: false,\n      onClick: _noop3.default,\n      type: 'button',\n      hasOnlyIcon: false\n    };\n  },\n  handleClick: function handleClick(event) {\n    var _props = this.props,\n        isDisabled = _props.isDisabled,\n        onClick = _props.onClick;\n\n    var domNode = _reactDom2.default.findDOMNode(this);\n\n    if (!isDisabled) {\n      // required to correctly apply the focus state in Safari and Firefox\n      domNode.focus();\n      onClick({\n        event: event,\n        props: this.props\n      });\n    }\n  },\n  render: function render() {\n    var _props2 = this.props,\n        isDisabled = _props2.isDisabled,\n        isActive = _props2.isActive,\n        hasOnlyIcon = _props2.hasOnlyIcon,\n        kind = _props2.kind,\n        size = _props2.size,\n        className = _props2.className,\n        children = _props2.children,\n        type = _props2.type,\n        passThroughs = _objectWithoutProperties(_props2, ['isDisabled', 'isActive', 'hasOnlyIcon', 'kind', 'size', 'className', 'children', 'type']);\n\n    return _react2.default.createElement('button', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Button, ['callbackId']), {\n      className: cx('&', {\n        '&-is-disabled': isDisabled,\n        '&-is-active': isActive,\n        '&-primary': kind === 'primary',\n        '&-link': kind === 'link',\n        '&-invisible': kind === 'invisible',\n        '&-success': kind === 'success',\n        '&-warning': kind === 'warning',\n        '&-danger': kind === 'danger',\n        '&-info': kind === 'info',\n        '&-short': size === 'short',\n        '&-small': size === 'small',\n        '&-large': size === 'large',\n        '&-has-only-icon': hasOnlyIcon\n      }, className),\n      onClick: this.handleClick,\n      disabled: isDisabled,\n      ref: 'button',\n      type: type\n    }), _react2.default.createElement('span', {\n      className: cx('&-content')\n    }, children));\n  }\n});\nexports.default = Button;","map":null,"metadata":{},"sourceType":"script"}