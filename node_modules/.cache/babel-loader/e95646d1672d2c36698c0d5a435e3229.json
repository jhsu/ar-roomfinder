{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DropMenuDumb = undefined;\n\nvar _every2 = require('lodash/every');\n\nvar _every3 = _interopRequireDefault(_every2);\n\nvar _assign2 = require('lodash/assign');\n\nvar _assign3 = _interopRequireDefault(_assign2);\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _findIndex2 = require('lodash/findIndex');\n\nvar _findIndex3 = _interopRequireDefault(_findIndex2);\n\nvar _findLastIndex2 = require('lodash/findLastIndex');\n\nvar _findLastIndex3 = _interopRequireDefault(_findLastIndex2);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _isNumber2 = require('lodash/isNumber');\n\nvar _isNumber3 = _interopRequireDefault(_isNumber2);\n\nvar _first2 = require('lodash/first');\n\nvar _first3 = _interopRequireDefault(_first2);\n\nvar _isNull2 = require('lodash/isNull');\n\nvar _isNull3 = _interopRequireDefault(_isNull2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _uniqueId2 = require('lodash/uniqueId');\n\nvar _uniqueId3 = _interopRequireDefault(_uniqueId2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _concat2 = require('lodash/concat');\n\nvar _concat3 = _interopRequireDefault(_concat2);\n\nvar _groupBy2 = require('lodash/groupBy');\n\nvar _groupBy3 = _interopRequireDefault(_groupBy2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _constant2 = require('lodash/constant');\n\nvar _constant3 = _interopRequireDefault(_constant2);\n\nvar _size2 = require('lodash/size');\n\nvar _size3 = _interopRequireDefault(_size2);\n\nvar _reduce2 = require('lodash/reduce');\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _domHelpers = require('../../util/dom-helpers');\n\nvar _stateManagement = require('../../util/state-management');\n\nvar _keyCode = require('../../constants/key-code');\n\nvar KEYCODE = _interopRequireWildcard(_keyCode);\n\nvar _DropMenu = require('./DropMenu.reducers');\n\nvar reducers = _interopRequireWildcard(_DropMenu);\n\nvar _ContextMenu = require('../ContextMenu/ContextMenu');\n\nvar _ContextMenu2 = _interopRequireDefault(_ContextMenu);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction joinArray(array, getSeparator) {\n  return (0, _reduce3.default)(array, function (newArray, element, index) {\n    newArray.push(element);\n\n    if (index < (0, _size3.default)(array) - 1) {\n      newArray.push(getSeparator(element, index, array));\n    }\n\n    return newArray;\n  }, []);\n}\n\nfunction isOptionVisible(option) {\n  return !option.optionProps.isHidden;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-DropMenu');\n\nvar any = _propTypes2.default.any,\n    arrayOf = _propTypes2.default.arrayOf,\n    bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func,\n    node = _propTypes2.default.node,\n    number = _propTypes2.default.number,\n    object = _propTypes2.default.object,\n    oneOf = _propTypes2.default.oneOf,\n    string = _propTypes2.default.string;\nvar DropMenu = (0, _componentTypes.createClass)({\n  displayName: 'DropMenu',\n  statics: {\n    preprocessOptionData: function preprocessOptionData(props) {\n      var ParentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DropMenu;\n      var hideFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (0, _constant3.default)(false);\n      var OptionGroup = ParentType.OptionGroup,\n          Option = ParentType.Option,\n          NullOption = ParentType.NullOption,\n          FixedOption = ParentType.FixedOption;\n      var optionGroups = (0, _map3.default)((0, _componentTypes.findTypes)(props, OptionGroup), 'props'); // find all OptionGroup props\n\n      var fixedOptions = (0, _map3.default)((0, _componentTypes.findTypes)(props, FixedOption), 'props'); // find all FixedOption props\n\n      var ungroupedOptions = (0, _map3.default)((0, _componentTypes.findTypes)(props, Option), 'props'); // find all ungrouped Option props\n\n      var nullOptions = NullOption ? (0, _map3.default)((0, _componentTypes.findTypes)(props, NullOption), 'props') : []; // find all NullOption props\n\n      var fixedOptionData = (0, _map3.default)(fixedOptions, function (optionProps, localOptionIndex) {\n        return {\n          localOptionIndex: localOptionIndex,\n          optionIndex: localOptionIndex,\n          optionGroupIndex: null,\n          // ungrouped options have no `optionGroupIndex`\n          optionProps: optionProps\n        };\n      }); // flatten grouped options into array of objects to associate { index, group index, and props } for each option\n\n      var groupedOptionData = (0, _reduce3.default)(optionGroups, function (memo, optionGroupProps, optionGroupIndex) {\n        var groupedOptions = (0, _map3.default)((0, _componentTypes.findTypes)(optionGroupProps, Option), 'props'); // find all Option props for current group\n\n        return memo.concat((0, _map3.default)(groupedOptions, function (optionProps, localOptionIndex) {\n          return {\n            localOptionIndex: localOptionIndex,\n            optionIndex: (0, _size3.default)(memo) + (0, _size3.default)(fixedOptionData) + localOptionIndex,\n            // add current index to current array length to get final option index\n            optionGroupIndex: optionGroupIndex,\n            // store option group index to associate option back to group\n            optionProps: _extends({\n              isHidden: hideFunction(optionProps)\n            }, optionProps)\n          };\n        }));\n      }, []); // create lookup object for options by their group index\n\n      var optionGroupDataLookup = (0, _groupBy3.default)(groupedOptionData, 'optionGroupIndex'); // store ungrouped options into array of objects to associate { index, and props } for each option\n\n      var ungroupedOptionData = (0, _map3.default)(ungroupedOptions, function (optionProps, localOptionIndex) {\n        return {\n          localOptionIndex: localOptionIndex,\n          optionIndex: (0, _size3.default)(groupedOptionData) + (0, _size3.default)(fixedOptionData) + localOptionIndex,\n          // add current index to grouped options array length to get final option index (grouped options rendered first)\n          optionGroupIndex: null,\n          // ungrouped options have no `optionGroupIndex`\n          optionProps: _extends({\n            isHidden: hideFunction(optionProps)\n          }, optionProps)\n        };\n      }); // concatenate grouped options array with ungrouped options array to get flat list of all options\n\n      var flattenedOptionsData = (0, _concat3.default)(fixedOptionData, groupedOptionData, ungroupedOptionData);\n      return {\n        optionGroups: optionGroups,\n        optionGroupDataLookup: optionGroupDataLookup,\n        fixedOptionData: fixedOptionData,\n        ungroupedOptionData: ungroupedOptionData,\n        flattenedOptionsData: flattenedOptionsData,\n        nullOptions: nullOptions\n      };\n    }\n  },\n  reducers: reducers,\n  components: {\n    Header: (0, _componentTypes.createClass)({\n      displayName: 'DropMenu.Header',\n      statics: {},\n      propName: 'Header'\n    }),\n    Control: (0, _componentTypes.createClass)({\n      displayName: 'DropMenu.Control',\n      statics: {},\n      propName: 'Control'\n    }),\n    OptionGroup: (0, _componentTypes.createClass)({\n      displayName: 'DropMenu.OptionGroup',\n      statics: {},\n      propName: 'OptionGroup',\n      propTypes: {\n        isHidden: bool\n      },\n      getDefaultProps: function getDefaultProps() {\n        return {\n          isHidden: false\n        };\n      }\n    }),\n    Option: (0, _componentTypes.createClass)({\n      displayName: 'DropMenu.Option',\n      statics: {},\n      propName: 'Option',\n      propTypes: {\n        isDisabled: bool,\n        isHidden: bool,\n        isWrapped: bool\n      },\n      getDefaultProps: function getDefaultProps() {\n        return {\n          isDisabled: false,\n          isHidden: false,\n          isWrapped: true\n        };\n      }\n    }),\n    NullOption: (0, _componentTypes.createClass)({\n      displayName: 'DropMenu.NullOption',\n      statics: {},\n      propName: 'NullOption'\n    }),\n    FixedOption: (0, _componentTypes.createClass)({\n      displayName: 'DropMenu.FixedOption',\n      statics: {},\n      propName: 'FixedOption',\n      propTypes: {\n        isDisabled: bool,\n        isHidden: bool,\n        isWrapped: bool\n      },\n      getDefaultProps: function getDefaultProps() {\n        return {\n          isDisabled: false,\n          isHidden: false,\n          isWrapped: true\n        };\n      }\n    }),\n    ContextMenu: (0, _componentTypes.createClass)({\n      displayName: 'DropMenu.ContextMenu',\n      statics: {},\n      propName: 'ContextMenu'\n    })\n  },\n  propTypes: {\n    children: node,\n    className: string,\n    style: object,\n    isDisabled: bool,\n    isExpanded: bool,\n    direction: oneOf(['down', 'up']),\n    alignment: oneOf(['start', 'center', 'end']),\n    selectedIndices: arrayOf(number),\n    focusedIndex: number,\n    portalId: string,\n    flyOutStyle: object,\n    optionContainerStyle: object,\n    onExpand: func,\n    onCollapse: func,\n    onSelect: func,\n    onFocusNext: func,\n    onFocusPrev: func,\n    onFocusOption: func,\n    Control: any,\n    Option: any,\n    OptionGroup: any,\n    NullOption: any,\n    Header: any,\n    ContextMenu: any\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isDisabled: false,\n      isExpanded: false,\n      direction: 'down',\n      alignment: 'start',\n      selectedIndices: [],\n      focusedIndex: null,\n      flyOutStyle: {\n        maxHeight: '18em'\n      },\n      onExpand: _noop3.default,\n      onCollapse: _noop3.default,\n      onSelect: _noop3.default,\n      onFocusNext: _noop3.default,\n      onFocusPrev: _noop3.default,\n      onFocusOption: _noop3.default,\n      ContextMenu: _ContextMenu2.default.getDefaultProps()\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isMouseTriggered: false,\n      optionGroups: [],\n      flattenedOptionsData: [],\n      ungroupedOptionData: [],\n      optionGroupDataLookup: {},\n      portalId: this.props.portalId || (0, _uniqueId3.default)('DropMenu-Portal-')\n    };\n  },\n  getPreprocessedOptionData: function getPreprocessedOptionData(props) {\n    return DropMenu.preprocessOptionData(props, DropMenu);\n  },\n  handleKeydown: function handleKeydown(event) {\n    var props = this.props,\n        _props = this.props,\n        isExpanded = _props.isExpanded,\n        focusedIndex = _props.focusedIndex,\n        onExpand = _props.onExpand,\n        onCollapse = _props.onCollapse,\n        onSelect = _props.onSelect,\n        onFocusOption = _props.onFocusOption;\n    var _state = this.state,\n        flattenedOptionsData = _state.flattenedOptionsData,\n        nullOptions = _state.nullOptions;\n    this.setState({\n      isMouseTriggered: false\n    });\n\n    if (isExpanded) {\n      if (event.keyCode === KEYCODE.Enter) {\n        event.preventDefault();\n        var focusedOptionData = (0, _get3.default)(flattenedOptionsData, focusedIndex, null);\n        var focusedOptionProps = (0, _get3.default)(focusedOptionData, 'optionProps', {});\n\n        if (focusedOptionData && !focusedOptionProps.isDisabled) {\n          onSelect(focusedIndex, {\n            props: focusedOptionProps,\n            event: event\n          });\n        } else if ((0, _isNull3.default)(focusedIndex)) {\n          onSelect(null, {\n            props: (0, _first3.default)(nullOptions),\n            event: event\n          });\n        }\n      }\n\n      if (event.keyCode === KEYCODE.Escape) {\n        event.preventDefault();\n        onCollapse({\n          props: props,\n          event: event\n        });\n      }\n\n      if (event.keyCode === KEYCODE.ArrowUp) {\n        if ((0, _isNumber3.default)(focusedIndex) || (0, _isNull3.default)(focusedIndex)) {\n          if (focusedIndex === 0) {\n            if (!(0, _isEmpty3.default)(nullOptions)) {\n              event.preventDefault();\n              onFocusOption(null, {\n                props: props,\n                event: event\n              });\n            }\n          }\n\n          if (focusedIndex > 0) {\n            event.preventDefault();\n            onFocusOption((0, _findLastIndex3.default)(flattenedOptionsData, isOptionVisible, focusedIndex - 1), {\n              props: props,\n              event: event\n            });\n          }\n        } else {\n          event.preventDefault();\n          onFocusOption((0, _findLastIndex3.default)(flattenedOptionsData, isOptionVisible, focusedIndex - 1), {\n            props: props,\n            event: event\n          });\n        }\n      }\n\n      if (event.keyCode === KEYCODE.ArrowDown) {\n        if ((0, _isNumber3.default)(focusedIndex)) {\n          if (focusedIndex < (0, _size3.default)(flattenedOptionsData) - 1) {\n            event.preventDefault();\n            onFocusOption((0, _findIndex3.default)(flattenedOptionsData, isOptionVisible, focusedIndex + 1), {\n              props: props,\n              event: event\n            });\n          }\n        } else {\n          event.preventDefault();\n          onFocusOption((0, _findIndex3.default)(flattenedOptionsData, isOptionVisible, focusedIndex), {\n            props: props,\n            event: event\n          });\n        }\n      }\n    } else {\n      if (event.keyCode === KEYCODE.ArrowDown) {\n        event.preventDefault();\n        onExpand({\n          props: props,\n          event: event\n        });\n      }\n    }\n  },\n  handleClick: function handleClick(event) {\n    var props = this.props,\n        _props2 = this.props,\n        isExpanded = _props2.isExpanded,\n        onExpand = _props2.onExpand,\n        onCollapse = _props2.onCollapse;\n\n    if (isExpanded) {\n      onCollapse({\n        props: props,\n        event: event\n      });\n    } else {\n      onExpand({\n        props: props,\n        event: event\n      });\n    }\n  },\n  handleMouseFocusOption: function handleMouseFocusOption(optionIndex, optionProps, event) {\n    var _props3 = this.props,\n        focusedIndex = _props3.focusedIndex,\n        onFocusOption = _props3.onFocusOption;\n    this.setState({\n      isMouseTriggered: true\n    });\n\n    if (!optionProps.isDisabled && focusedIndex !== optionIndex) {\n      onFocusOption(optionIndex, {\n        props: optionProps,\n        event: event\n      });\n    }\n  },\n  handleSelectOption: function handleSelectOption(optionIndex, optionProps, event) {\n    var onSelect = this.props.onSelect;\n\n    if (!optionProps.isDisabled) {\n      onSelect(optionIndex, {\n        props: optionProps,\n        event: event\n      });\n    }\n  },\n  renderOption: function renderOption(optionProps, optionIndex, isGrouped) {\n    var _this = this;\n\n    var _props4 = this.props,\n        selectedIndices = _props4.selectedIndices,\n        focusedIndex = _props4.focusedIndex;\n    var isMouseTriggered = this.state.isMouseTriggered;\n    var isDisabled = optionProps.isDisabled,\n        isHidden = optionProps.isHidden,\n        isWrapped = optionProps.isWrapped;\n    var isFocused = optionIndex === focusedIndex;\n    var isSelected = (0, _includes3.default)(selectedIndices, optionIndex);\n    return !isHidden && _react2.default.createElement('div', _extends({\n      key: 'DropMenuOption' + optionIndex\n    }, (0, _componentTypes.omitProps)(optionProps, DropMenu.Option), {\n      onClick: function onClick(event) {\n        return _this.handleSelectOption(optionIndex, optionProps, event);\n      },\n      onMouseMove: function onMouseMove(event) {\n        return _this.handleMouseFocusOption(optionIndex, optionProps, event);\n      },\n      className: cx('&-Option', {\n        '&-Option-is-grouped': isGrouped,\n        '&-Option-is-focused': isFocused,\n        '&-Option-is-selected': isSelected,\n        '&-Option-is-disabled': isDisabled,\n        '&-Option-is-null': (0, _isNull3.default)(optionIndex),\n        '&-Option-is-wrapped': isWrapped\n      }, optionProps.className),\n      ref: function ref(optionDOMNode) {\n        if (isFocused && !isMouseTriggered) {\n          (0, _domHelpers.scrollParentTo)(optionDOMNode, _this._header && _this._header.offsetHeight);\n        }\n      }\n    }));\n  },\n  componentWillMount: function componentWillMount() {\n    // preprocess the options data before rendering\n    this.setState(this.getPreprocessedOptionData(this.props));\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    // only preprocess options data when it changes (via new props) - better performance than doing this each render\n    this.setState(this.getPreprocessedOptionData(nextProps));\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var _props5 = this.props,\n        className = _props5.className,\n        style = _props5.style,\n        isDisabled = _props5.isDisabled,\n        isExpanded = _props5.isExpanded,\n        direction = _props5.direction,\n        alignment = _props5.alignment,\n        onCollapse = _props5.onCollapse,\n        flyOutStyle = _props5.flyOutStyle,\n        optionContainerStyle = _props5.optionContainerStyle,\n        passThroughs = _objectWithoutProperties(_props5, ['className', 'style', 'isDisabled', 'isExpanded', 'direction', 'alignment', 'onCollapse', 'flyOutStyle', 'optionContainerStyle']);\n\n    var _state2 = this.state,\n        optionGroups = _state2.optionGroups,\n        fixedOptionData = _state2.fixedOptionData,\n        ungroupedOptionData = _state2.ungroupedOptionData,\n        optionGroupDataLookup = _state2.optionGroupDataLookup,\n        nullOptions = _state2.nullOptions,\n        portalId = _state2.portalId;\n    var contextMenuProps = (0, _get3.default)((0, _componentTypes.getFirst)(this.props, DropMenu.ContextMenu), 'props', {});\n    var controlProps = (0, _get3.default)((0, _componentTypes.getFirst)(this.props, DropMenu.Control), 'props', {});\n    var headerProps = (0, _get3.default)((0, _componentTypes.getFirst)(this.props, DropMenu.Header), 'props', {});\n    return _react2.default.createElement('div', _extends({\n      className: cx('&', '&-base', {\n        '&-is-expanded': isExpanded,\n        '&-direction-down': isExpanded && direction === 'down',\n        '&-direction-up': isExpanded && direction === 'up'\n      }, className),\n      style: style\n    }, (0, _componentTypes.omitProps)(passThroughs, DropMenu)), _react2.default.createElement(_ContextMenu2.default, _extends({}, contextMenuProps, {\n      portalId: portalId,\n      isExpanded: isExpanded,\n      direction: direction,\n      alignment: alignment,\n      onClickOut: onCollapse\n    }), _react2.default.createElement(_ContextMenu2.default.Target, null, _react2.default.createElement('div', _extends({}, !isDisabled ? {\n      tabIndex: 0,\n      onClick: this.handleClick,\n      onKeyDown: this.handleKeydown\n    } : null, controlProps, {\n      className: cx('&-Control', (0, _get3.default)(controlProps, 'className'))\n    }))), _react2.default.createElement(_ContextMenu2.default.FlyOut, {\n      className: cx('&', className),\n      style: flyOutStyle\n    }, !(0, _isEmpty3.default)(headerProps) && _react2.default.createElement('div', _extends({}, headerProps, {\n      className: cx('&-Header', headerProps.className),\n      onKeyDown: this.handleKeydown,\n      ref: function ref(header) {\n        return _this2._header = header;\n      }\n    })), _react2.default.createElement('div', {\n      className: cx('&-option-container'),\n      style: (0, _assign3.default)({}, flyOutStyle, optionContainerStyle)\n    }, (0, _map3.default)(nullOptions, function (optionProps) {\n      return _this2.renderOption(optionProps, null);\n    }).concat((0, _isEmpty3.default)(nullOptions) ? [] : [_react2.default.createElement('div', {\n      key: 'OptionGroup-divider-NullOption',\n      className: cx('&-OptionGroup-divider')\n    })]), // fixed options go first\n    (0, _map3.default)(fixedOptionData, function (_ref) {\n      var optionProps = _ref.optionProps,\n          optionIndex = _ref.optionIndex;\n      return _this2.renderOption(optionProps, optionIndex);\n    }), joinArray( // for each option group,\n    (0, _map3.default)(optionGroups, function (optionGroupProps, optionGroupIndex) {\n      var groupedOptions = optionGroupDataLookup[optionGroupIndex];\n\n      if (optionGroupProps.isHidden || (0, _every3.default)(groupedOptions, {\n        optionProps: {\n          isHidden: true\n        }\n      })) {\n        return null;\n      }\n\n      var labelElements = (0, _componentTypes.rejectTypes)(optionGroupProps.children, [DropMenu.Control, DropMenu.OptionGroup, DropMenu.Option, DropMenu.NullOption]); // render label if there is one\n\n      return ((0, _isEmpty3.default)(labelElements) ? [] : [_react2.default.createElement('div', _extends({}, (0, _componentTypes.omitProps)(optionGroupProps, DropMenu.OptionGroup), {\n        key: 'OptionGroup-label' + optionGroupIndex,\n        className: cx('&-label', optionGroupProps.className)\n      }), labelElements)]).concat((0, _map3.default)(optionGroupDataLookup[optionGroupIndex], function (_ref2) {\n        var optionProps = _ref2.optionProps,\n            optionIndex = _ref2.optionIndex;\n        return _this2.renderOption(optionProps, optionIndex, true);\n      })); // append all ungrouped options as another unlabeled group\n    }).concat((0, _isEmpty3.default)(ungroupedOptionData) ? [] : [(0, _map3.default)(ungroupedOptionData, function (_ref3) {\n      var optionProps = _ref3.optionProps,\n          optionIndex = _ref3.optionIndex;\n      return _this2.renderOption(optionProps, optionIndex);\n    })]), function (element, index) {\n      return element && _react2.default.createElement('div', {\n        key: 'OptionGroup-divider-' + index,\n        className: cx('&-OptionGroup-divider')\n      });\n    } // separate each group with divider\n    )))));\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(DropMenu);\nexports.DropMenuDumb = DropMenu;","map":null,"metadata":{},"sourceType":"script"}