{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-Grid');\n\nvar string = _propTypes2.default.string,\n    bool = _propTypes2.default.bool,\n    node = _propTypes2.default.node;\nvar Grid = (0, _componentTypes.createClass)({\n  displayName: 'Grid',\n  statics: {},\n  components: {\n    Cell: (0, _componentTypes.createClass)({\n      displayName: 'Grid.Cell',\n      statics: {},\n      propTypes: {\n        isFull: bool,\n        isHalf: bool,\n        isThird: bool,\n        isQuarter: bool,\n        is2: bool,\n        is3: bool,\n        is4: bool,\n        is5: bool,\n        is6: bool,\n        is7: bool,\n        is8: bool,\n        is9: bool,\n        is10: bool,\n        is11: bool,\n        isOffsetQuarter: bool,\n        isOffsetThird: bool,\n        isOffsetHalf: bool\n      }\n    })\n  },\n  propTypes: {\n    className: string,\n    isVertical: bool,\n    isHorizontal: bool,\n    isGutterless: bool,\n    isMultiline: bool,\n    children: node\n  },\n  render: function render() {\n    var _props = this.props,\n        className = _props.className,\n        children = _props.children,\n        isVertical = _props.isVertical,\n        isHorizontal = _props.isHorizontal,\n        isGutterless = _props.isGutterless,\n        isMultiline = _props.isMultiline,\n        passThroughs = _objectWithoutProperties(_props, ['className', 'children', 'isVertical', 'isHorizontal', 'isGutterless', 'isMultiline']);\n\n    var cellChildProps = (0, _map3.default)((0, _componentTypes.findTypes)(this.props, Grid.Cell), 'props');\n    return _react2.default.createElement('section', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Grid), {\n      className: cx('&', {\n        '&-is-vertical': isVertical,\n        '&-is-horizontal': isHorizontal,\n        '&-is-gutterless': isGutterless,\n        '&-is-multiline': isMultiline\n      }, className)\n    }), (0, _map3.default)(cellChildProps, function (cellChildProp, index) {\n      return _react2.default.createElement('article', _extends({}, (0, _componentTypes.omitProps)(cellChildProp, Grid.Cell), {\n        key: index,\n        className: cx('&-Cell', {\n          '&-Cell-is-full': cellChildProp.isFull,\n          '&-Cell-is-half': cellChildProp.isHalf,\n          '&-Cell-is-quarter': cellChildProp.isQuarter,\n          '&-Cell-is-third': cellChildProp.isThird,\n          '&-Cell-is-2': cellChildProp.is2,\n          '&-Cell-is-3': cellChildProp.is3,\n          '&-Cell-is-4': cellChildProp.is4,\n          '&-Cell-is-5': cellChildProp.is5,\n          '&-Cell-is-6': cellChildProp.is6,\n          '&-Cell-is-7': cellChildProp.is7,\n          '&-Cell-is-8': cellChildProp.is8,\n          '&-Cell-is-9': cellChildProp.is9,\n          '&-Cell-is-10': cellChildProp.is10,\n          '&-Cell-is-11': cellChildProp.is11,\n          '&-Cell-is-offset-quarter': cellChildProp.isOffsetQuarter,\n          '&-Cell-is-offset-third': cellChildProp.isOffsetThird,\n          '&-Cell-is-offset-half': cellChildProp.isOffsetHalf\n        }, cellChildProp.className)\n      }), cellChildProp.children);\n    }), children);\n  }\n});\nexports.default = Grid;","map":null,"metadata":{},"sourceType":"script"}