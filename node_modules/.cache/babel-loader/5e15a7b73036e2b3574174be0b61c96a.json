{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _uniqueId2 = require('lodash/uniqueId');\n\nvar _uniqueId3 = _interopRequireDefault(_uniqueId2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Portal = require('../Portal/Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar _CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup');\n\nvar _CSSTransitionGroup2 = _interopRequireDefault(_CSSTransitionGroup);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-Overlay');\n\nvar string = _propTypes2.default.string,\n    bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func,\n    node = _propTypes2.default.node;\nvar Overlay = (0, _componentTypes.createClass)({\n  displayName: 'Overlay',\n  statics: {},\n  propTypes: {\n    className: string,\n    children: node,\n    isShown: bool,\n    isAnimated: bool,\n    isModal: bool,\n    portalId: string,\n    onEscape: func,\n    onBackgroundClick: func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isShown: false,\n      isModal: true,\n      onEscape: _noop3.default,\n      onBackgroundClick: _noop3.default,\n      isAnimated: true\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      // This must be in state because getDefaultProps only runs once per\n      // component import which causes collisions\n      portalId: this.props.portalId || (0, _uniqueId3.default)('Overlay-Portal-')\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    if (window && window.document) {\n      window.document.addEventListener('keydown', this.handleDocumentKeyDown);\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    if (window && window.document) {\n      window.document.removeEventListener('keydown', this.handleDocumentKeyDown);\n    }\n  },\n  handleDocumentKeyDown: function handleDocumentKeyDown(event) {\n    // If the user hits the \"escape\" key, then fire an `onEscape`\n    // TODO: use key helpers\n    if (event.keyCode === 27) {\n      this.props.onEscape({\n        event: event,\n        props: this.props\n      });\n    }\n  },\n  handleDivRef: function handleDivRef(divDOMNode) {\n    // Store the dom node so we can check if it's clicked on later\n    this._divDOMNode = _reactDom2.default.findDOMNode(divDOMNode);\n  },\n  handleBackgroundClick: function handleBackgroundClick(event) {\n    // Use the reference we previously stored from the `ref` to check what\n    // element was clicked on.\n    if (this._divDOMNode && event.target === this._divDOMNode) {\n      this.props.onBackgroundClick({\n        event: event,\n        props: this.props\n      });\n    }\n  },\n  render: function render() {\n    var _props = this.props,\n        className = _props.className,\n        isShown = _props.isShown,\n        isModal = _props.isModal,\n        isAnimated = _props.isAnimated,\n        children = _props.children,\n        passThroughs = _objectWithoutProperties(_props, ['className', 'isShown', 'isModal', 'isAnimated', 'children']);\n\n    var portalId = this.state.portalId;\n    var overlayElement = isShown ? _react2.default.createElement('div', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Overlay), {\n      className: cx(className, '&', {\n        '&-is-not-modal': !isModal,\n        '&-is-animated': isAnimated\n      }),\n      onClick: this.handleBackgroundClick,\n      ref: this.handleDivRef\n    }), children) : null;\n    return _react2.default.createElement(_Portal2.default, {\n      portalId: portalId\n    }, isAnimated ? _react2.default.createElement(_CSSTransitionGroup2.default, {\n      transitionName: cx('&'),\n      transitionEnterTimeout: 300,\n      transitionLeaveTimeout: 300\n    }, overlayElement) : overlayElement);\n  }\n});\nexports.default = Overlay;","map":null,"metadata":{},"sourceType":"script"}