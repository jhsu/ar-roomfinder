{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RadioGroupDumb = undefined;\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _findLastIndex2 = require('lodash/findLastIndex');\n\nvar _findLastIndex3 = _interopRequireDefault(_findLastIndex2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _uniqueId2 = require('lodash/uniqueId');\n\nvar _uniqueId3 = _interopRequireDefault(_uniqueId2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _RadioGroup = require('./RadioGroup.reducers');\n\nvar _RadioGroup2 = _interopRequireDefault(_RadioGroup);\n\nvar _stateManagement = require('../../util/state-management');\n\nvar _RadioButtonLabeled = require('../RadioButtonLabeled/RadioButtonLabeled');\n\nvar _RadioButtonLabeled2 = _interopRequireDefault(_RadioButtonLabeled);\n\nvar _RadioButton = require('../RadioButton/RadioButton');\n\nvar _RadioButton2 = _interopRequireDefault(_RadioButton);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-RadioGroup');\n\nvar func = _propTypes2.default.func,\n    node = _propTypes2.default.node,\n    number = _propTypes2.default.number,\n    string = _propTypes2.default.string,\n    bool = _propTypes2.default.bool;\nvar RadioGroup = (0, _componentTypes.createClass)({\n  displayName: 'RadioGroup',\n  statics: {},\n  components: {\n    RadioButton: _RadioButton2.default,\n    Label: (0, _componentTypes.createClass)({\n      displayName: 'RadioGroup.Label',\n      statics: {},\n      propTypes: {\n        children: node\n      }\n    })\n  },\n  reducers: _RadioGroup2.default,\n  propTypes: {\n    children: node,\n    className: string,\n    name: string,\n    onSelect: func,\n    selectedIndex: number,\n    isDisabled: bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      name: (0, _uniqueId3.default)(cx('&') + '-'),\n      onSelect: _noop3.default,\n      selectedIndex: 0,\n      isDisabled: false\n    };\n  },\n  render: function render() {\n    var _this = this;\n\n    var _props = this.props,\n        children = _props.children,\n        className = _props.className,\n        name = _props.name,\n        selectedIndex = _props.selectedIndex,\n        isDisabled = _props.isDisabled,\n        passThroughs = _objectWithoutProperties(_props, ['children', 'className', 'name', 'selectedIndex', 'isDisabled']);\n\n    var radioButtonChildProps = (0, _map3.default)((0, _componentTypes.findTypes)(this.props, RadioGroup.RadioButton), 'props');\n    var selectedIndexFromChildren = (0, _findLastIndex3.default)(radioButtonChildProps, {\n      isSelected: true\n    }); // If there are any `RadioGroup.RadioButton` children with `isSelected`\n    // equal to true, then the index of the last one should override the\n    // value of the `selectedIndex` prop.\n\n    var actualSelectedIndex = selectedIndexFromChildren !== -1 ? selectedIndexFromChildren : selectedIndex;\n    return _react2.default.createElement('span', _extends({}, (0, _componentTypes.omitProps)(passThroughs, RadioGroup), {\n      className: cx('&', className)\n    }), (0, _map3.default)(radioButtonChildProps, function (radioButtonChildProp, index) {\n      return _react2.default.createElement(_RadioButtonLabeled2.default, _extends({}, radioButtonChildProp, {\n        isDisabled: isDisabled || radioButtonChildProp.isDisabled,\n        isSelected: actualSelectedIndex === index,\n        key: index,\n        callbackId: index,\n        name: name,\n        onSelect: _this.handleSelected,\n        Label: (0, _get3.default)((0, _componentTypes.getFirst)(radioButtonChildProp, RadioGroup.Label), 'props', null)\n      }));\n    }), (0, _componentTypes.rejectTypes)(children, RadioGroup.RadioButton));\n  },\n  handleSelected: function handleSelected(isSelected, _ref) {\n    var event = _ref.event,\n        childProps = _ref.props;\n    var callbackId = childProps.callbackId;\n    var clickedRadioButtonProps = (0, _map3.default)((0, _componentTypes.findTypes)(this.props, RadioGroup.RadioButton), 'props')[callbackId]; // If the `RadioGroup.RadioButton` child has an `onSelect` prop that is\n    // a function, call that prior to calling the group's `onSelect` prop.\n\n    if ((0, _isFunction3.default)(clickedRadioButtonProps.onSelect)) {\n      clickedRadioButtonProps.onSelect(isSelected, {\n        event: event,\n        props: childProps\n      });\n    }\n\n    this.props.onSelect(callbackId, {\n      event: event,\n      props: childProps\n    });\n  }\n});\nexports.default = (0, _stateManagement.buildHybridComponent)(RadioGroup);\nexports.RadioGroupDumb = RadioGroup;","map":null,"metadata":{},"sourceType":"script"}