{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isString2 = require('lodash/isString');\n\nvar _isString3 = _interopRequireDefault(_isString2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _toNumber2 = require('lodash/toNumber');\n\nvar _toNumber3 = _interopRequireDefault(_toNumber2);\n\nvar _keys2 = require('lodash/keys');\n\nvar _keys3 = _interopRequireDefault(_keys2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _set2 = require('lodash/set');\n\nvar _set3 = _interopRequireDefault(_set2);\n\nvar _each2 = require('lodash/each');\n\nvar _each3 = _interopRequireDefault(_each2);\n\nvar _reduce2 = require('lodash/reduce');\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _identity2 = require('lodash/identity');\n\nvar _identity3 = _interopRequireDefault(_identity2);\n\nvar _compact2 = require('lodash/compact');\n\nvar _compact3 = _interopRequireDefault(_compact2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nvar _chartHelpers = require('../../util/chart-helpers');\n\nvar _d3Scale = require('d3-scale');\n\nvar d3Scale = _interopRequireWildcard(_d3Scale);\n\nvar _d3TimeFormat = require('d3-time-format');\n\nvar d3TimeFormat = _interopRequireWildcard(_d3TimeFormat);\n\nvar _charts = require('../../constants/charts');\n\nvar chartConstants = _interopRequireWildcard(_charts);\n\nvar _Axis = require('../Axis/Axis');\n\nvar _Axis2 = _interopRequireDefault(_Axis);\n\nvar _AxisLabel = require('../AxisLabel/AxisLabel');\n\nvar _AxisLabel2 = _interopRequireDefault(_AxisLabel);\n\nvar _Legend = require('../Legend/Legend');\n\nvar _Legend2 = _interopRequireDefault(_Legend);\n\nvar _Lines = require('../Lines/Lines');\n\nvar _Lines2 = _interopRequireDefault(_Lines);\n\nvar _Points = require('../Points/Points');\n\nvar _Points2 = _interopRequireDefault(_Points);\n\nvar _ToolTip = require('../ToolTip/ToolTip');\n\nvar _ContextMenu = require('../ContextMenu/ContextMenu');\n\nvar _ContextMenu2 = _interopRequireDefault(_ContextMenu);\n\nvar _EmptyStateWrapper = require('../EmptyStateWrapper/EmptyStateWrapper');\n\nvar _EmptyStateWrapper2 = _interopRequireDefault(_EmptyStateWrapper);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-LineChart');\n\nvar arrayOf = _propTypes2.default.arrayOf,\n    func = _propTypes2.default.func,\n    instanceOf = _propTypes2.default.instanceOf,\n    number = _propTypes2.default.number,\n    object = _propTypes2.default.object,\n    shape = _propTypes2.default.shape,\n    string = _propTypes2.default.string,\n    bool = _propTypes2.default.bool,\n    oneOfType = _propTypes2.default.oneOfType,\n    oneOf = _propTypes2.default.oneOf;\nvar LineChart = (0, _componentTypes.createClass)({\n  displayName: 'LineChart',\n  statics: {\n    MARGIN: {\n      top: 10,\n      right: 80,\n      bottom: 65,\n      left: 80\n    }\n  },\n  propTypes: {\n    className: string,\n    height: number,\n    width: number,\n    margin: shape({\n      top: number,\n      right: number,\n      bottom: number,\n      left: number\n    }),\n    data: arrayOf(object),\n    legend: object,\n    isLoading: bool,\n    hasToolTips: bool,\n    hasLegend: bool,\n    palette: arrayOf(string),\n    colorMap: object,\n    xAxisField: string,\n    xAxisMin: instanceOf(Date),\n    xAxisMax: instanceOf(Date),\n    xAxisFormatter: func,\n    xAxisTooltipFormatter: func,\n    xAxisTickCount: number,\n    xAxisTicks: arrayOf(instanceOf(Date)),\n    xAxisTitle: string,\n    xAxisTitleColor: oneOfType([number, string]),\n    xAxisTextOrientation: oneOf(['vertical', 'horizontal', 'diagonal']),\n    yAxisFields: arrayOf(string),\n    yAxisMin: number,\n    yAxisMax: number,\n    yAxisFormatter: func,\n    yAxisIsStacked: bool,\n    yAxisHasPoints: bool,\n    yAxisTickCount: number,\n    yAxisTitle: string,\n    yAxisTitleColor: oneOfType([number, string]),\n    yAxisTooltipFormatter: func,\n    yAxisTooltipDataFormatter: func,\n    yAxisColorOffset: number,\n    y2AxisFields: arrayOf(string),\n    y2AxisMin: number,\n    y2AxisMax: number,\n    y2AxisFormatter: func,\n    y2AxisTooltipDataFormatter: func,\n    y2AxisIsStacked: bool,\n    y2AxisHasPoints: bool,\n    y2AxisTickCount: number,\n    y2AxisTitle: string,\n    y2AxisTitleColor: oneOfType([number, string]),\n    y2AxisColorOffset: number,\n    yAxisTextOrientation: oneOf(['vertical', 'horizontal', 'diagonal'])\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      height: 400,\n      width: 1000,\n      margin: {\n        top: 10,\n        right: 80,\n        bottom: 65,\n        left: 80\n      },\n      palette: chartConstants.PALETTE_6,\n      hasToolTips: true,\n      hasLegend: false,\n      xAxisField: 'x',\n      xAxisTickCount: null,\n      xAxisTicks: undefined,\n      // intentionally undefined so that `Axis` can default it correctly\n      xAxisTitle: null,\n      xAxisTitleColor: '#000',\n      // E.g. \"Mon 06/06/2016 15:46:19\"\n      xAxisTooltipFormatter: d3TimeFormat.timeFormat('%a %x %X'),\n      xAxisTextOrientation: 'horizontal',\n      yAxisFields: ['y'],\n      yAxisIsStacked: false,\n      yAxisMin: 0,\n      yAxisHasPoints: true,\n      yAxisTickCount: null,\n      yAxisTitle: null,\n      yAxisTitleColor: '#000',\n      yAxisTooltipFormatter: function yAxisTooltipFormatter(yField, yValueFormatted) {\n        return yField + ': ' + yValueFormatted;\n      },\n      yAxisColorOffset: 0,\n      y2AxisFields: null,\n      y2AxisIsStacked: false,\n      y2AxisHasPoints: true,\n      y2AxisMin: 0,\n      y2AxisTickCount: null,\n      y2AxisTitle: null,\n      y2AxisTitleColor: '#000',\n      y2AxisColorOffset: 1,\n      yAxisTextOrientation: 'horizontal'\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isHovering: false\n    };\n  },\n  components: {\n    EmptyStateWrapper: _EmptyStateWrapper2.default\n  },\n  handleToolTipHoverZone: function handleToolTipHoverZone(_ref, xPoints) {\n    var clientX = _ref.clientX,\n        target = _ref.target;\n    var mouseX = (0, _chartHelpers.nearest)(xPoints, clientX - target.getBoundingClientRect().left);\n\n    if (!this.state.isHovering || this.state.mouseX !== mouseX) {\n      this.setState({\n        isHovering: true,\n        mouseX: (0, _chartHelpers.nearest)(xPoints, clientX - target.getBoundingClientRect().left)\n      });\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    var _props = this.props,\n        className = _props.className,\n        height = _props.height,\n        width = _props.width,\n        marginOriginal = _props.margin,\n        data = _props.data,\n        legend = _props.legend,\n        isLoading = _props.isLoading,\n        hasToolTips = _props.hasToolTips,\n        hasLegend = _props.hasLegend,\n        palette = _props.palette,\n        colorMap = _props.colorMap,\n        xAxisField = _props.xAxisField,\n        xAxisTickCount = _props.xAxisTickCount,\n        xAxisTicks = _props.xAxisTicks,\n        xAxisTitle = _props.xAxisTitle,\n        xAxisTitleColor = _props.xAxisTitleColor,\n        _props$xAxisFormatter = _props.xAxisFormatter,\n        xAxisFormatter = _props$xAxisFormatter === undefined ? _chartHelpers.formatDate : _props$xAxisFormatter,\n        xAxisTooltipFormatter = _props.xAxisTooltipFormatter,\n        _props$xAxisMin = _props.xAxisMin,\n        xAxisMin = _props$xAxisMin === undefined ? (0, _chartHelpers.minByFields)(data, xAxisField) : _props$xAxisMin,\n        _props$xAxisMax = _props.xAxisMax,\n        xAxisMax = _props$xAxisMax === undefined ? (0, _chartHelpers.maxByFields)(data, xAxisField) : _props$xAxisMax,\n        xAxisTextOrientation = _props.xAxisTextOrientation,\n        yAxisFields = _props.yAxisFields,\n        yAxisFormatter = _props.yAxisFormatter,\n        yAxisHasPoints = _props.yAxisHasPoints,\n        yAxisIsStacked = _props.yAxisIsStacked,\n        yAxisTickCount = _props.yAxisTickCount,\n        yAxisTitle = _props.yAxisTitle,\n        yAxisTitleColor = _props.yAxisTitleColor,\n        yAxisMin = _props.yAxisMin,\n        yAxisTooltipFormatter = _props.yAxisTooltipFormatter,\n        yAxisTooltipDataFormatter = _props.yAxisTooltipDataFormatter,\n        _props$yAxisMax = _props.yAxisMax,\n        yAxisMax = _props$yAxisMax === undefined ? yAxisIsStacked ? (0, _chartHelpers.maxByFieldsStacked)(data, yAxisFields) : (0, _chartHelpers.maxByFields)(data, yAxisFields) : _props$yAxisMax,\n        yAxisColorOffset = _props.yAxisColorOffset,\n        y2AxisFields = _props.y2AxisFields,\n        y2AxisFormatter = _props.y2AxisFormatter,\n        y2AxisTooltipDataFormatter = _props.y2AxisTooltipDataFormatter,\n        y2AxisHasPoints = _props.y2AxisHasPoints,\n        y2AxisIsStacked = _props.y2AxisIsStacked,\n        y2AxisTickCount = _props.y2AxisTickCount,\n        y2AxisTitle = _props.y2AxisTitle,\n        y2AxisTitleColor = _props.y2AxisTitleColor,\n        y2AxisMin = _props.y2AxisMin,\n        _props$y2AxisMax = _props.y2AxisMax,\n        y2AxisMax = _props$y2AxisMax === undefined ? y2AxisFields && y2AxisIsStacked ? (0, _chartHelpers.maxByFieldsStacked)(data, y2AxisFields) : (0, _chartHelpers.maxByFields)(data, y2AxisFields) : _props$y2AxisMax,\n        y2AxisColorOffset = _props.y2AxisColorOffset,\n        yAxisTextOrientation = _props.yAxisTextOrientation,\n        passThroughs = _objectWithoutProperties(_props, ['className', 'height', 'width', 'margin', 'data', 'legend', 'isLoading', 'hasToolTips', 'hasLegend', 'palette', 'colorMap', 'xAxisField', 'xAxisTickCount', 'xAxisTicks', 'xAxisTitle', 'xAxisTitleColor', 'xAxisFormatter', 'xAxisTooltipFormatter', 'xAxisMin', 'xAxisMax', 'xAxisTextOrientation', 'yAxisFields', 'yAxisFormatter', 'yAxisHasPoints', 'yAxisIsStacked', 'yAxisTickCount', 'yAxisTitle', 'yAxisTitleColor', 'yAxisMin', 'yAxisTooltipFormatter', 'yAxisTooltipDataFormatter', 'yAxisMax', 'yAxisColorOffset', 'y2AxisFields', 'y2AxisFormatter', 'y2AxisTooltipDataFormatter', 'y2AxisHasPoints', 'y2AxisIsStacked', 'y2AxisTickCount', 'y2AxisTitle', 'y2AxisTitleColor', 'y2AxisMin', 'y2AxisMax', 'y2AxisColorOffset', 'yAxisTextOrientation']);\n\n    var _state = this.state,\n        isHovering = _state.isHovering,\n        mouseX = _state.mouseX;\n\n    var margin = _extends({}, LineChart.MARGIN, marginOriginal);\n\n    var svgClasses = cx(className, '&');\n    var innerWidth = width - margin.left - margin.right;\n    var innerHeight = height - margin.top - margin.bottom;\n    var allYFields = (0, _compact3.default)(yAxisFields.concat(y2AxisFields));\n    var xScale = d3Scale.scaleTime().domain([xAxisMin, xAxisMax]).range([0, innerWidth]);\n    var yScale = d3Scale.scaleLinear().domain([yAxisMin, yAxisMax]).range([innerHeight, 0]);\n    var y2Scale = y2AxisFields ? d3Scale.scaleLinear().domain([y2AxisMin, y2AxisMax]).range([innerHeight, 0]) : null;\n    var yAxisFinalFormatter = yAxisFormatter || yScale.tickFormat();\n    var y2AxisFinalFormatter = y2AxisFormatter ? y2AxisFormatter : y2Scale ? y2Scale.tickFormat() : _identity3.default;\n    var xFinalFormatter = xAxisFormatter ? xAxisFormatter : xScale.tickFormat();\n    var yFinalFormatter = yAxisTooltipDataFormatter ? yAxisTooltipDataFormatter : yAxisFinalFormatter;\n    var y2FinalFormatter = y2AxisTooltipDataFormatter ? y2AxisTooltipDataFormatter : y2AxisFinalFormatter; // This logic is getting a bit complicated\n\n    var yAxisHasPointsFinal = yAxisHasPoints || yAxisIsStacked;\n    var yAxisHasLinesFinal = !(yAxisIsStacked && !yAxisHasPoints);\n    var y2AxisHasPointsFinal = y2AxisHasPoints || y2AxisIsStacked;\n    var y2AxisHasLinesFinal = !(y2AxisIsStacked && !y2AxisHasPoints); // This is used to map x mouse values back to data points.\n\n    var xPointMap = (0, _reduce3.default)(data, function (acc, d) {\n      // `floor` to avoid rounding errors, it doesn't need to be super precise\n      // since we're dealing with pixels\n      var point = Math.floor(xScale(d[xAxisField]));\n      (0, _each3.default)(allYFields, function (field) {\n        (0, _set3.default)(acc, point + '.y.' + field, d[field]);\n        (0, _set3.default)(acc, point + '.x', d[xAxisField]);\n      });\n      return acc;\n    }, {});\n    var xPoints = (0, _map3.default)((0, _keys3.default)(xPointMap), _toNumber3.default);\n\n    if ((0, _isEmpty3.default)(data) || width < 1 || height < 1 || isLoading) {\n      var emptyStateWrapper = (0, _componentTypes.getFirst)(this.props, LineChart.EmptyStateWrapper) || _react2.default.createElement(LineChart.EmptyStateWrapper, {\n        Title: 'You have no data.'\n      });\n\n      return _react2.default.createElement(_EmptyStateWrapper2.default, _extends({}, emptyStateWrapper.props, {\n        isEmpty: (0, _isEmpty3.default)(data),\n        isLoading: isLoading\n      }), emptyStateWrapper.props.children, _react2.default.createElement('svg', _extends({}, (0, _componentTypes.omitProps)(passThroughs, LineChart), {\n        className: svgClasses,\n        width: width,\n        height: height\n      }), _react2.default.createElement('g', {\n        transform: 'translate(' + margin.left + ', ' + margin.top + ')'\n      }, _react2.default.createElement(_Axis2.default, {\n        orient: 'left',\n        scale: yScale,\n        tickFormat: yAxisFormatter,\n        ref: 'yAxis'\n      })), _react2.default.createElement('g', {\n        transform: 'translate(' + margin.left + ', ' + (innerHeight + margin.top) + ')'\n      }, _react2.default.createElement(_Axis2.default, {\n        orient: 'bottom',\n        scale: xScale,\n        tickFormat: xFinalFormatter,\n        ref: 'xAxis'\n      }))));\n    }\n\n    return _react2.default.createElement('svg', _extends({}, (0, _componentTypes.omitProps)(passThroughs, LineChart), {\n      className: svgClasses,\n      width: width,\n      height: height\n    }), _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + margin.top + ')'\n    }, hasToolTips && isHovering && !(0, _isNil3.default)(mouseX) ? _react2.default.createElement(_ToolTip.ToolTipDumb, {\n      isExpanded: true,\n      flyOutMaxWidth: 'none',\n      alignment: mouseX < innerWidth * 0.15 ? 'start' : mouseX > innerWidth * 0.85 ? 'end' : 'center'\n    }, _react2.default.createElement(_ToolTip.ToolTipDumb.Target, {\n      elementType: 'g'\n    }, _react2.default.createElement('path', {\n      className: cx('&-tooltip-line'),\n      d: 'M' + mouseX + ',0 L' + mouseX + ',' + innerHeight\n    })), _react2.default.createElement(_ToolTip.ToolTipDumb.Title, null, xAxisTooltipFormatter((0, _get3.default)(xPointMap, mouseX + '.x'))), _react2.default.createElement(_ToolTip.ToolTipDumb.Body, null, _react2.default.createElement(_Legend2.default, {\n      hasBorders: false,\n      isReversed: yAxisIsStacked\n    }, (0, _map3.default)(yAxisFields, function (field, index) {\n      return !(0, _isNil3.default)((0, _get3.default)(xPointMap, mouseX + '.y.' + field)) ? _react2.default.createElement(_Legend2.default.Item, {\n        key: index,\n        hasPoint: yAxisHasPointsFinal,\n        hasLine: yAxisHasLinesFinal,\n        color: (0, _get3.default)(colorMap, field, palette[(index + yAxisColorOffset) % palette.length]),\n        pointKind: yAxisHasPoints ? index + yAxisColorOffset : 1\n      }, yAxisTooltipFormatter((0, _get3.default)(legend, field, field), yFinalFormatter((0, _get3.default)(xPointMap, mouseX + '.y.' + field)), (0, _get3.default)(xPointMap, mouseX + '.y.' + field))) : null;\n    }), (0, _map3.default)(y2AxisFields, function (field, index) {\n      return !(0, _isNil3.default)((0, _get3.default)(xPointMap, mouseX + '.y.' + field)) ? _react2.default.createElement(_Legend2.default.Item, {\n        key: index,\n        hasPoint: y2AxisHasPointsFinal,\n        hasLine: y2AxisHasLinesFinal,\n        color: (0, _get3.default)(colorMap, field, palette[y2AxisColorOffset + index + yAxisFields.length % palette.length]),\n        pointKind: y2AxisHasPoints ? y2AxisColorOffset + index + yAxisFields.length : 1\n      }, yAxisTooltipFormatter((0, _get3.default)(legend, field, field), y2FinalFormatter((0, _get3.default)(xPointMap, mouseX + '.y.' + field)), (0, _get3.default)(xPointMap, mouseX + '.y.' + field))) : null;\n    })))) : null), _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + (innerHeight + margin.top) + ')'\n    }, _react2.default.createElement(_Axis2.default, {\n      orient: 'bottom',\n      scale: xScale,\n      outerTickSize: 0,\n      tickFormat: xFinalFormatter,\n      tickCount: xAxisTickCount,\n      ticks: xAxisTicks,\n      ref: 'xAxis',\n      textOrientation: xAxisTextOrientation\n    }), hasLegend ? _react2.default.createElement(_ContextMenu2.default, {\n      direction: 'down',\n      alignment: 'center',\n      directonOffset: (margin.bottom / 2 + _Legend2.default.HEIGHT / 2) * -1\n      /* should center the legend in the bottom margin */\n\n    }, _react2.default.createElement(_ContextMenu2.default.Target, {\n      elementType: 'g'\n    }, _react2.default.createElement('rect', {\n      className: cx('&-invisible'),\n      width: innerWidth,\n      height: margin.bottom\n    })), _react2.default.createElement(_ContextMenu2.default.FlyOut, {\n      className: cx('&-legend-container')\n    }, _react2.default.createElement(_Legend2.default, {\n      orient: 'horizontal'\n    }, (0, _map3.default)(yAxisFields, function (field, index) {\n      return _react2.default.createElement(_Legend2.default.Item, {\n        key: index,\n        hasPoint: yAxisHasPointsFinal,\n        hasLine: yAxisHasLinesFinal,\n        color: (0, _get3.default)(colorMap, field, palette[index + yAxisColorOffset % palette.length]),\n        pointKind: yAxisHasPoints ? index + yAxisColorOffset : 1\n      }, (0, _get3.default)(legend, field, field));\n    }), (0, _map3.default)(y2AxisFields, function (field, index) {\n      return _react2.default.createElement(_Legend2.default.Item, {\n        key: index,\n        hasPoint: y2AxisHasPointsFinal,\n        hasLine: y2AxisHasLinesFinal,\n        color: (0, _get3.default)(colorMap, field, palette[y2AxisColorOffset + index + yAxisFields.length % palette.length]),\n        pointKind: y2AxisHasPoints ? y2AxisColorOffset + index + yAxisFields.length : 1\n      }, (0, _get3.default)(legend, field, field));\n    })))) : null), xAxisTitle ? _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + (margin.top + innerHeight) + ')'\n    }, _react2.default.createElement(_AxisLabel2.default, {\n      orient: 'bottom',\n      width: innerWidth,\n      height: margin.bottom,\n      label: xAxisTitle,\n      color: (0, _isString3.default)(xAxisTitleColor) ? xAxisTitleColor : palette[xAxisTitleColor % palette.length],\n      ref: 'xAxisTitle'\n    })) : null, _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + margin.top + ')'\n    }, _react2.default.createElement(_Axis2.default, {\n      orient: 'left',\n      scale: yScale,\n      tickFormat: yAxisFinalFormatter,\n      tickCount: yAxisTickCount,\n      ref: 'yAxis',\n      textOrientation: yAxisTextOrientation\n    })), yAxisTitle ? _react2.default.createElement('g', {\n      transform: 'translate(0, ' + margin.top + ')'\n    }, _react2.default.createElement(_AxisLabel2.default, {\n      orient: 'left',\n      width: margin.left,\n      height: innerHeight,\n      label: yAxisTitle,\n      color: (0, _isString3.default)(yAxisTitleColor) ? yAxisTitleColor : palette[yAxisTitleColor % palette.length],\n      ref: 'yAxisTitle'\n    })) : null, y2AxisFields ? _react2.default.createElement('g', {\n      transform: 'translate(' + (margin.left + innerWidth) + ', ' + margin.top + ')'\n    }, _react2.default.createElement(_Axis2.default, {\n      orient: 'right',\n      scale: y2Scale,\n      tickFormat: y2AxisFinalFormatter,\n      tickCount: y2AxisTickCount,\n      ref: 'y2Axis'\n    })) : null, y2AxisTitle ? _react2.default.createElement('g', {\n      transform: 'translate(' + (margin.left + innerWidth) + ', ' + margin.top + ')'\n    }, _react2.default.createElement(_AxisLabel2.default, {\n      orient: 'right',\n      width: margin.right,\n      height: innerHeight,\n      label: y2AxisTitle,\n      color: (0, _isString3.default)(y2AxisTitleColor) ? y2AxisTitleColor : palette[y2AxisTitleColor % palette.length],\n      ref: 'y2AxisTitle'\n    })) : null, _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + margin.top + ')'\n    }, _react2.default.createElement(_Lines2.default, {\n      xScale: xScale,\n      yScale: yScale,\n      xField: xAxisField,\n      yFields: yAxisFields,\n      yStackedMax: yAxisMax,\n      data: data,\n      isStacked: yAxisIsStacked,\n      colorMap: colorMap,\n      palette: palette,\n      colorOffset: yAxisColorOffset,\n      ref: 'yLines'\n    })), yAxisHasPoints ? _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + margin.top + ')'\n    }, _react2.default.createElement(_Points2.default, {\n      xScale: xScale,\n      yScale: yScale,\n      xField: xAxisField,\n      yFields: yAxisFields,\n      yStackedMax: yAxisMax,\n      data: data,\n      isStacked: yAxisIsStacked,\n      colorMap: colorMap,\n      palette: palette,\n      colorOffset: yAxisColorOffset,\n      ref: 'yPoints'\n    })) : null, y2AxisFields ? _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + margin.top + ')'\n    }, _react2.default.createElement(_Lines2.default, {\n      xScale: xScale,\n      yScale: y2Scale,\n      xField: xAxisField,\n      yFields: y2AxisFields,\n      yStackedMax: y2AxisMax,\n      data: data,\n      isStacked: y2AxisIsStacked,\n      colorOffset: y2AxisColorOffset + yAxisFields.length,\n      colorMap: colorMap,\n      palette: palette,\n      ref: 'y2Lines'\n    })) : null, y2AxisFields && y2AxisHasPoints ? _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + margin.top + ')'\n    }, _react2.default.createElement(_Points2.default, {\n      xScale: xScale,\n      yScale: y2Scale,\n      xField: xAxisField,\n      yFields: y2AxisFields,\n      yStackedMax: y2AxisMax,\n      data: data,\n      isStacked: y2AxisIsStacked,\n      colorOffset: y2AxisColorOffset + yAxisFields.length,\n      colorMap: colorMap,\n      palette: palette,\n      ref: 'y2Points'\n    })) : null, hasToolTips ? _react2.default.createElement('g', {\n      transform: 'translate(' + margin.left + ', ' + margin.top + ')'\n    }, _react2.default.createElement('rect', {\n      className: cx('&-invisible'),\n      width: innerWidth,\n      height: innerHeight,\n      onMouseMove: function onMouseMove(event) {\n        _this.handleToolTipHoverZone(event, xPoints);\n      },\n      onMouseOut: function onMouseOut() {\n        _this.setState({\n          isHovering: false\n        });\n      }\n    })) : null);\n  }\n});\nexports.default = LineChart;","map":null,"metadata":{},"sourceType":"script"}