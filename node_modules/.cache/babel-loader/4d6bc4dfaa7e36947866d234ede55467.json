{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _delay2 = require('lodash/delay');\n\nvar _delay3 = _interopRequireDefault(_delay2);\n\nvar _size2 = require('lodash/size');\n\nvar _size3 = _interopRequireDefault(_size2);\n\nvar _noop2 = require('lodash/noop');\n\nvar _noop3 = _interopRequireDefault(_noop2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('react-peek/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactMotion = require('react-motion');\n\nvar _motionSpring = require('../../constants/motion-spring');\n\nvar _styleHelpers = require('../../util/style-helpers');\n\nvar _domHelpers = require('../../util/dom-helpers');\n\nvar _componentTypes = require('../../util/component-types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar cx = _styleHelpers.lucidClassNames.bind('&-SlidePanel');\n\nvar bool = _propTypes2.default.bool,\n    func = _propTypes2.default.func,\n    node = _propTypes2.default.node,\n    number = _propTypes2.default.number,\n    string = _propTypes2.default.string;\n\nvar modulo = function modulo(n, a) {\n  return a - n * Math.floor(a / n);\n};\n\nvar SlidePanel = (0, _componentTypes.createClass)({\n  displayName: 'SlidePanel',\n  statics: {},\n  _isPrivate: true,\n  components: {\n    Slide: (0, _componentTypes.createClass)({\n      displayName: 'SlidePanel.Slide',\n      propName: 'Slide'\n    })\n  },\n  propTypes: {\n    className: string,\n    children: node,\n    slidesToShow: number,\n    offset: number,\n    isAnimated: bool,\n    isLooped: bool,\n    onSwipe: func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      slidesToShow: 1,\n      offset: 0,\n      isAnimated: true,\n      onSwipe: _noop3.default,\n      isLooped: false\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      translateXPixel: 0\n    };\n  },\n  handleTouchStart: function handleTouchStart(event) {\n    this.startX = event.touches[0].screenX;\n    this.isAnimated = false;\n    this.isDragging = true;\n  },\n  handleTouchMove: function handleTouchMove(event) {\n    var dX = event.touches[0].screenX - this.startX;\n    this.setState({\n      translateXPixel: dX\n    });\n  },\n  handleTouchEnd: function handleTouchEnd(event) {\n    var dX = event.changedTouches[0].screenX - this.startX;\n    var slideWidth = this.rootNode.getBoundingClientRect().width / this.props.slidesToShow;\n    var slidesSwiped = Math.round(dX / slideWidth);\n\n    if (slidesSwiped !== 0) {\n      this.props.onSwipe(-1 * slidesSwiped, {\n        event: event,\n        props: this.props\n      });\n    }\n\n    this.setState({\n      translateXPixel: 0\n    });\n    this.isAnimated = this.props.isAnimated;\n    this.isDragging = false;\n  },\n  componentWillMount: function componentWillMount() {\n    var slides = (0, _componentTypes.findTypes)(this.props, SlidePanel.Slide);\n    this.isAnimated = this.props.isAnimated;\n    this.isDragging = false;\n    this.offsetTranslate = this.props.isLooped ? Math.floor((0, _size3.default)(slides) / 2) : 0;\n  },\n  componentDidMount: function componentDidMount() {\n    var slides = (0, _componentTypes.findTypes)(this.props, SlidePanel.Slide);\n    this.slideStrip = this.rootNode.querySelector('.lucid-SlidePanel-slidestrip');\n\n    if (this.props.isLooped) {\n      (0, _domHelpers.shiftChildren)(this.slideStrip, Math.floor((0, _size3.default)(slides) / 2));\n    }\n  },\n  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n    var _this = this;\n\n    var slides = (0, _componentTypes.findTypes)(this.props, SlidePanel.Slide);\n    var offsetDiff = this.props.offset - prevProps.offset;\n\n    if (offsetDiff !== 0) {\n      if (this.props.isLooped) {\n        this.offsetTranslate = modulo((0, _size3.default)(slides), this.offsetTranslate - offsetDiff);\n        (0, _delay3.default)(function () {\n          (0, _domHelpers.shiftChildren)(_this.slideStrip, -offsetDiff);\n          _this.isAnimated = false;\n\n          _this.forceUpdate();\n\n          _this.isAnimated = _this.props.isAnimated;\n        }, 200);\n      }\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        className = _props.className,\n        slidesToShow = _props.slidesToShow,\n        realOffset = _props.offset,\n        isLooped = _props.isLooped,\n        passThroughs = _objectWithoutProperties(_props, ['className', 'slidesToShow', 'offset', 'isLooped']);\n\n    var offset = realOffset + this.offsetTranslate;\n    var slides = (0, _componentTypes.findTypes)(this.props, SlidePanel.Slide);\n    var translateXPercentage = -1 * (100 / slidesToShow) * (isLooped ? modulo((0, _size3.default)(slides), offset) : offset);\n    return _react2.default.createElement('div', _extends({}, (0, _componentTypes.omitProps)(passThroughs, SlidePanel), {\n      ref: function ref(domNode) {\n        _this2.rootNode = domNode;\n      },\n      className: cx('&', className)\n    }), _react2.default.createElement(_reactMotion.Motion, {\n      style: this.isAnimated ? {\n        translateXPercentage: (0, _reactMotion.spring)(translateXPercentage, _motionSpring.QUICK_SLIDE_MOTION),\n        translateXPixel: (0, _reactMotion.spring)(this.state.translateXPixel, _motionSpring.QUICK_SLIDE_MOTION)\n      } : {\n        translateXPercentage: translateXPercentage,\n        translateXPixel: this.state.translateXPixel\n      }\n    }, function (tween) {\n      return _react2.default.createElement('div', _extends({}, (0, _componentTypes.omitProps)(passThroughs, SlidePanel), {\n        className: cx('&-slidestrip', className),\n        style: {\n          transform: _this2.isDragging ? 'translateX(calc(' + tween.translateXPercentage + '% + ' + _this2.state.translateXPixel + 'px))' : 'translateX(calc(' + tween.translateXPercentage + '% + ' + tween.translateXPixel + 'px))'\n        },\n        onTouchStart: _this2.handleTouchStart,\n        onTouchMove: _this2.handleTouchMove,\n        onTouchEnd: _this2.handleTouchEnd,\n        onTouchCancel: _noop3.default\n      }), (0, _map3.default)(slides, function (slide, offset) {\n        return _react2.default.createElement('div', _extends({\n          key: offset\n        }, slide.props, {\n          className: cx('&-Slide', slide.props.className),\n          style: _extends({\n            flexGrow: 1,\n            flexShrink: 0,\n            flexBasis: 100 / slidesToShow + '%'\n          }, slide.props.style)\n        }));\n      }));\n    }));\n  }\n});\nexports.default = SlidePanel;","map":null,"metadata":{},"sourceType":"script"}