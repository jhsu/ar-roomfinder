{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isNumber2 = require('lodash/isNumber');\n\nvar _isNumber3 = _interopRequireDefault(_isNumber2);\n\nvar _isNull2 = require('lodash/isNull');\n\nvar _isNull3 = _interopRequireDefault(_isNull2);\n\nvar _last2 = require('lodash/last');\n\nvar _last3 = _interopRequireDefault(_last2);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.onExpand = onExpand;\nexports.onCollapse = onCollapse;\nexports.onSelect = onSelect;\nexports.onFocusNext = onFocusNext;\nexports.onFocusPrev = onFocusPrev;\nexports.onFocusOption = onFocusOption;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction onExpand(state) {\n  var selectedIndices = state.selectedIndices;\n  return _extends({}, state, {\n    isExpanded: true,\n    focusedIndex: (0, _isEmpty3.default)(selectedIndices) ? null : (0, _last3.default)(selectedIndices)\n  });\n}\n\nfunction onCollapse(state) {\n  return _extends({}, state, {\n    isExpanded: false\n  });\n}\n\nfunction onSelect(state, optionIndex) {\n  return _extends({}, state, {\n    selectedIndices: [optionIndex],\n    isExpanded: false\n  });\n}\n\nfunction onFocusNext(state) {\n  var focusedIndex = state.focusedIndex;\n  var nextFocusedIndex = focusedIndex;\n\n  if ((0, _isNull3.default)(focusedIndex)) {\n    nextFocusedIndex = 0;\n  } else if ((0, _isNumber3.default)(focusedIndex)) {\n    nextFocusedIndex = focusedIndex + 1;\n  }\n\n  return _extends({}, state, {\n    focusedIndex: nextFocusedIndex\n  });\n}\n\nfunction onFocusPrev(state) {\n  var focusedIndex = state.focusedIndex;\n  var nextFocusedIndex = focusedIndex;\n\n  if ((0, _isNull3.default)(focusedIndex) || focusedIndex === 0) {\n    nextFocusedIndex = null;\n  } else if ((0, _isNumber3.default)(focusedIndex)) {\n    nextFocusedIndex = focusedIndex - 1;\n  }\n\n  return _extends({}, state, {\n    focusedIndex: nextFocusedIndex\n  });\n}\n\nfunction onFocusOption(state, optionIndex) {\n  return _extends({}, state, {\n    focusedIndex: optionIndex\n  });\n}","map":null,"metadata":{},"sourceType":"script"}