'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('react-peek/prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styleHelpers = require('../../util/style-helpers');

var _componentTypes = require('../../util/component-types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _styleHelpers.lucidClassNames.bind('&-Grid');

var string = _propTypes2.default.string,
    bool = _propTypes2.default.bool,
    node = _propTypes2.default.node;


var Grid = (0, _componentTypes.createClass)({
	displayName: 'Grid',

	statics: {},

	components: {
		Cell: (0, _componentTypes.createClass)({
			displayName: 'Grid.Cell',
			statics: {},
			propTypes: {
				isFull: bool,
				isHalf: bool,
				isThird: bool,
				isQuarter: bool,
				is2: bool,
				is3: bool,
				is4: bool,
				is5: bool,
				is6: bool,
				is7: bool,
				is8: bool,
				is9: bool,
				is10: bool,
				is11: bool,
				isOffsetQuarter: bool,
				isOffsetThird: bool,
				isOffsetHalf: bool
			}
		})
	},

	propTypes: {
		className: string,

		isVertical: bool,

		isHorizontal: bool,

		isGutterless: bool,

		isMultiline: bool,

		children: node
	},

	render: function render() {
		var _props = this.props,
		    className = _props.className,
		    children = _props.children,
		    isVertical = _props.isVertical,
		    isHorizontal = _props.isHorizontal,
		    isGutterless = _props.isGutterless,
		    isMultiline = _props.isMultiline,
		    passThroughs = _objectWithoutProperties(_props, ['className', 'children', 'isVertical', 'isHorizontal', 'isGutterless', 'isMultiline']);

		var cellChildProps = (0, _map3.default)((0, _componentTypes.findTypes)(this.props, Grid.Cell), 'props');

		return _react2.default.createElement(
			'section',
			_extends({}, (0, _componentTypes.omitProps)(passThroughs, Grid), {
				className: cx('&', {
					'&-is-vertical': isVertical,
					'&-is-horizontal': isHorizontal,
					'&-is-gutterless': isGutterless,
					'&-is-multiline': isMultiline
				}, className)
			}),
			(0, _map3.default)(cellChildProps, function (cellChildProp, index) {
				return _react2.default.createElement(
					'article',
					_extends({}, (0, _componentTypes.omitProps)(cellChildProp, Grid.Cell), {
						key: index,
						className: cx('&-Cell', {
							'&-Cell-is-full': cellChildProp.isFull,
							'&-Cell-is-half': cellChildProp.isHalf,
							'&-Cell-is-quarter': cellChildProp.isQuarter,
							'&-Cell-is-third': cellChildProp.isThird,
							'&-Cell-is-2': cellChildProp.is2,
							'&-Cell-is-3': cellChildProp.is3,
							'&-Cell-is-4': cellChildProp.is4,
							'&-Cell-is-5': cellChildProp.is5,
							'&-Cell-is-6': cellChildProp.is6,
							'&-Cell-is-7': cellChildProp.is7,
							'&-Cell-is-8': cellChildProp.is8,
							'&-Cell-is-9': cellChildProp.is9,
							'&-Cell-is-10': cellChildProp.is10,
							'&-Cell-is-11': cellChildProp.is11,
							'&-Cell-is-offset-quarter': cellChildProp.isOffsetQuarter,
							'&-Cell-is-offset-third': cellChildProp.isOffsetThird,
							'&-Cell-is-offset-half': cellChildProp.isOffsetHalf
						}, cellChildProp.className)
					}),
					cellChildProp.children
				);
			}),
			children
		);
	}
});

exports.default = Grid;