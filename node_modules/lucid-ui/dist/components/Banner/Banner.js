'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _noop2 = require('lodash/noop');

var _noop3 = _interopRequireDefault(_noop2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('react-peek/prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup');

var _CSSTransitionGroup2 = _interopRequireDefault(_CSSTransitionGroup);

var _styleHelpers = require('../../util/style-helpers');

var _componentTypes = require('../../util/component-types');

var _CrossIcon = require('../Icon/CrossIcon/CrossIcon');

var _CrossIcon2 = _interopRequireDefault(_CrossIcon);

var _DangerIcon = require('../Icon/DangerIcon/DangerIcon');

var _DangerIcon2 = _interopRequireDefault(_DangerIcon);

var _InfoIcon = require('../Icon/InfoIcon/InfoIcon');

var _InfoIcon2 = _interopRequireDefault(_InfoIcon);

var _SuccessIcon = require('../Icon/SuccessIcon/SuccessIcon');

var _SuccessIcon2 = _interopRequireDefault(_SuccessIcon);

var _WarningIcon = require('../Icon/WarningIcon/WarningIcon');

var _WarningIcon2 = _interopRequireDefault(_WarningIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _styleHelpers.lucidClassNames.bind('&-Banner');

var bool = _propTypes2.default.bool,
    element = _propTypes2.default.element,
    func = _propTypes2.default.func,
    node = _propTypes2.default.node,
    oneOf = _propTypes2.default.oneOf,
    string = _propTypes2.default.string;


var defaultIcons = {
	success: _react2.default.createElement(_SuccessIcon2.default, null),
	danger: _react2.default.createElement(_DangerIcon2.default, null),
	info: _react2.default.createElement(_InfoIcon2.default, null),
	warning: _react2.default.createElement(_WarningIcon2.default, null),
	primary: null,
	default: null
};

var Banner = (0, _componentTypes.createClass)({
	displayName: 'Banner',

	statics: {},

	propTypes: {
		hasIcon: bool,

		icon: element,

		isCloseable: bool,

		hasRoundedCorners: bool,

		className: string,

		children: node,

		kind: oneOf(['primary', 'success', 'warning', 'danger', 'info', 'default']),

		isSmall: bool,

		onClose: func,

		isClosed: bool
	},

	getDefaultProps: function getDefaultProps() {
		return {
			hasIcon: false,
			icon: null,
			isCloseable: true,
			hasRoundedCorners: true,
			kind: 'default',
			isSmall: false,
			onClose: _noop3.default
		};
	},
	handleClose: function handleClose(event) {
		var onClose = this.props.onClose;


		onClose({ event: event, props: this.props });
	},
	render: function render() {
		var _props = this.props,
		    hasIcon = _props.hasIcon,
		    icon = _props.icon,
		    kind = _props.kind,
		    isSmall = _props.isSmall,
		    className = _props.className,
		    children = _props.children,
		    isCloseable = _props.isCloseable,
		    hasRoundedCorners = _props.hasRoundedCorners,
		    isClosed = _props.isClosed,
		    passThroughs = _objectWithoutProperties(_props, ['hasIcon', 'icon', 'kind', 'isSmall', 'className', 'children', 'isCloseable', 'hasRoundedCorners', 'isClosed']);

		var displayedIcon = null;

		if (icon) {
			displayedIcon = icon;
		} else if (hasIcon) {
			displayedIcon = defaultIcons[kind];
		}

		return _react2.default.createElement(
			_CSSTransitionGroup2.default,
			{
				transitionName: cx('&'),
				transitionEnterTimeout: 300,
				transitionLeaveTimeout: 300
			},
			!isClosed ? _react2.default.createElement(
				'section',
				_extends({}, (0, _componentTypes.omitProps)(passThroughs, Banner), {
					className: cx('&', {
						'&-has-icon': displayedIcon,
						'&-has-close': isCloseable,
						'&-has-no-roundedCorners': !hasRoundedCorners,
						'&-primary': kind === 'primary',
						'&-success': kind === 'success',
						'&-warning': kind === 'warning',
						'&-danger': kind === 'danger',
						'&-info': kind === 'info',
						'&-small': isSmall
					}, className)
				}),
				displayedIcon ? _react2.default.createElement(
					'span',
					{ className: cx('&-icon') },
					displayedIcon
				) : null,
				_react2.default.createElement(
					'span',
					{ className: cx('&-content') },
					children
				),
				isCloseable ? _react2.default.createElement(_CrossIcon2.default, {
					isClickable: true,
					size: isSmall ? 44 : 26,
					viewBox: isSmall ? '-12 -6 28 28' : '-3 -6 20 20',
					className: cx('&-close'),
					onClick: this.handleClose
				}) : null
			) : null
		);
	}
});

exports.default = Banner;