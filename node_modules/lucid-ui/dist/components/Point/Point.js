'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _startsWith2 = require('lodash/startsWith');

var _startsWith3 = _interopRequireDefault(_startsWith2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('react-peek/prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styleHelpers = require('../../util/style-helpers');

var _componentTypes = require('../../util/component-types');

var _chartHelpers = require('../../util/chart-helpers');

var _charts = require('../../constants/charts');

var chartConstants = _interopRequireWildcard(_charts);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _styleHelpers.lucidClassNames.bind('&-Point');

var number = _propTypes2.default.number,
    bool = _propTypes2.default.bool,
    string = _propTypes2.default.string,
    object = _propTypes2.default.object;

// These were originally built in a 12x12 grid, except triangles which were
// 14x12 cause triangles are poo.

var PATHS = ['M6,12 C2.686,12 0,9.314 0,6 C0,2.686 2.686,0 6,0 C9.314,-0 12,2.686 12,6 C12,9.314 9.314,12 6,12 z', 'M6,12 C0,12 0,12 0,6 C0,0 -0,0 6,0 C12,0 12,0 12,6 C12,12 12,12 6,12 z', 'M6.034,1.656 C7,0 7,0 7.966,1.656 L13.034,10.344 C14,12 13,12 12,12 L2,12 C1,12 0,12 0.966,10.344 L6.034,1.656 z', 'M7.966,10.344 C7,12 7,12 6.034,10.344 L0.966,1.656 C-0,0 1,0 2,0 L12,0 C13,0 14,0 13.034,1.656 L7.966,10.344 z', 'M2.594,9.406 C-0.812,6 -0.812,6 2.594,2.594 C6,-0.812 6,-0.812 9.406,2.594 C12.812,6 12.812,6 9.406,9.406 C6,12.812 6,12.812 2.594,9.406 z'];

var Point = (0, _componentTypes.createClass)({
	displayName: 'Point',

	statics: {},

	propTypes: {
		style: object,

		className: string,

		hasStroke: bool,

		x: number,

		y: number,

		kind: number,

		color: string,

		scale: number
	},

	getDefaultProps: function getDefaultProps() {
		return {
			x: 0,
			y: 0,
			kind: 0,
			color: chartConstants.COLOR_0,
			hasStroke: false,
			scale: 1
		};
	},
	render: function render() {
		var _props = this.props,
		    className = _props.className,
		    color = _props.color,
		    hasStroke = _props.hasStroke,
		    style = _props.style,
		    kind = _props.kind,
		    x = _props.x,
		    y = _props.y,
		    scale = _props.scale,
		    passThroughs = _objectWithoutProperties(_props, ['className', 'color', 'hasStroke', 'style', 'kind', 'x', 'y', 'scale']);

		var kindIndex = kind % 5;

		var isCustomColor = (0, _startsWith3.default)(color, '#');
		var colorStyle = isCustomColor ? { fill: color } : null;

		// These transforms are used to center the icon on the x y coordinate
		// provided.
		var transforms = [(0, _chartHelpers.transformFromCenter)(x, y, 6, 6, scale), (0, _chartHelpers.transformFromCenter)(x, y, 6, 6, scale), (0, _chartHelpers.transformFromCenter)(x, y, 7, 6, scale), // triangle
		(0, _chartHelpers.transformFromCenter)(x, y, 7, 6, scale), // triangle
		(0, _chartHelpers.transformFromCenter)(x, y, 6, 6, scale)];

		return _react2.default.createElement('path', _extends({}, (0, _componentTypes.omitProps)(passThroughs, Point), {
			style: _extends({}, style, colorStyle),
			className: cx(className, '&', _defineProperty({
				'&-has-stroke': hasStroke
			}, '&-' + color, !isCustomColor)),
			transform: transforms[kindIndex],
			d: PATHS[kindIndex]
		}));
	}
});

exports.default = Point;